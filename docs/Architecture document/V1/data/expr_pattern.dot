digraph hierarchy {
	node[shape=record,style=filled,fillcolor=gray95]
	edge[dir=back, arrowtail=empty]

    // nodes
	0 [label="{ExprPattern||matches(expr: Expr): Option[Env]}"]	
	1 [label="{BinaryOpPattern|left: AtomicExprPattern\nright: AtomicExprPattern\nop: StringPattern}"]
	2[label="{UnaryOpPattern|operand: AtomicExprPattern\nop: StringPattern}"]
	3 [label="{BinaryOpPattern|left: AssignmentPattern\nright: AtomicExprPattern\nop: StringPattern}"]
	4 [label="{CompoundAssignOpPattern|left: AtomicExprPattern\nright: AtomicExprPattern\nop: StringPattern}"]
	5 [label="{PointerExprPattern|metavar: UndefinedVar}"]
	6 [label="{CallExprPattern|name: StringPattern\nparams: Option[List[AtomicExprPattern]]\ntypeOf: StringPattern}"]
	
    // links    
	0 -> 1
	0 -> 2
	0 -> 3
	0 -> 4
	0 -> 5
	0 -> 6
}