digraph {
	// nodes
	Expr [shape=box,label=<<I><B>Expr</B></I>>];
	BinaryOp [shape=none,label=<
		<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4">
			<TR><TD>BinaryOp</TD></TR>
			<TR><TD>
				left, right: Expr <BR/>
				operator: String
			</TD></TR>		
		</TABLE>
	>];	 
	UnaryOp [shape=none,label=<
		<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4">
			<TR><TD>UnaryOp</TD></TR>
			<TR><TD>
				operand: Expr <BR/>
				operator: String <BR/>
				pos: OpPosition
			</TD></TR>		
		</TABLE>
	>];
	Literal [shape=none,label=<
		<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4">
			<TR><TD>Literal</TD></TR>
			<TR><TD>
				typeName: String <BR/>
				value: String
			</TD></TR>		
		</TABLE>
	>];
	DeclRefExpr [shape=none,label=<
		<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4">
			<TR><TD>DeclRefExpr</TD></TR>
			<TR><TD>
				targetType: String <BR/>
				targetName: String <BR/>
				targetId: String <BR/>
				refType: String
			</TD></TR>		
		</TABLE>
	>];
	InitListExpr [shape=none,label=<
		<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4">
			<TR><TD>InitListExpr</TD></TR>
			<TR><TD>
				exprs: List[Expr]
			</TD></TR>		
		</TABLE>
	>];
	ArraySubscriptExpr [shape=none,label=<
		<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4">
			<TR><TD>ArraySubscriptExpr</TD></TR>
			<TR><TD>
				exprs: (Expr,Expr)
			</TD></TR>		
		</TABLE>
	>];
	CallExpr [shape=none,label=<
		<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4">
			<TR><TD>CallExpr</TD></TR>
			<TR><TD>
				returnType: String <BR/>
				params: List[Expr]
			</TD></TR>		
		</TABLE>
	>];
	OpPosition [shape=box,label=<<I><B>OpPosition</B></I>>];
	Postfix [shape=box];
	Prefix [shape=box];
	
	// links	
	Postfix -> OpPosition
	Prefix -> OpPosition
	CallExpr -> Expr
	ArraySubscriptExpr -> Expr
	BinaryOp -> Expr
	UnaryOp -> Expr
	DeclRefExpr -> Expr
	InitListExpr -> Expr
	Literal -> Expr
}