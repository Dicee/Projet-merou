TranslationUnitDecl 0x1028254d0 <<invalid sloc>>
|-TypedefDecl 0x102825a10 <<invalid sloc>> __int128_t '__int128'
|-TypedefDecl 0x102825a70 <<invalid sloc>> __uint128_t 'unsigned __int128'
|-TypedefDecl 0x102825e30 <<invalid sloc>> __builtin_va_list '__va_list_tag [1]'
|-VarDecl 0x102825f00 <./test.cpp:1:1, col:23> staVar 'char [100]' static
|-VarDecl 0x102825f70 <line:2:1, col:15> globVar 'int'
| `-IntegerLiteral 0x102825fc8 <col:15> 'int' 0
|-FunctionDecl 0x1028260c0 <line:4:1, line:6:1> increment 'int (int)'
| |-ParmVarDecl 0x102826000 <line:4:15, col:19> value 'int'
| `-CompoundStmt 0x1028261e8 <col:26, line:6:1>
|   `-ReturnStmt 0x1028261c8 <line:5:2, col:11>
|     `-ImplicitCastExpr 0x1028261b0 <col:9, col:11> 'int' <LValueToRValue>
|       `-UnaryOperator 0x102826190 <col:9, col:11> 'int' lvalue prefix '++'
|         `-DeclRefExpr 0x102826168 <col:11> 'int' lvalue ParmVar 0x102826000 'value' 'int'
|-FunctionDecl 0x1028725a0 <line:8:1, line:10:1> increment 'void (int &, int)'
| |-ParmVarDecl 0x102872460 <line:8:16, col:21> value 'int &'
| |-ParmVarDecl 0x1028724d0 <col:28, col:32> steps 'int'
| `-CompoundStmt 0x1028726f0 <col:39, line:10:1>
|   `-CompoundAssignOperator 0x1028726b8 <line:9:2, col:11> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
|     |-DeclRefExpr 0x102872650 <col:2> 'int' lvalue ParmVar 0x102872460 'value' 'int &'
|     `-ImplicitCastExpr 0x1028726a0 <col:11> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x102872678 <col:11> 'int' lvalue ParmVar 0x1028724d0 'steps' 'int'
|-FunctionDecl 0x1028727a0 <line:12:1, line:14:1> self 'int (int)'
| |-ParmVarDecl 0x102872720 <line:12:10, col:14> value 'int'
| `-CompoundStmt 0x1028728a8 <col:21, line:14:1>
|   `-ReturnStmt 0x102872888 <line:13:2, col:9>
|     `-ImplicitCastExpr 0x102872870 <col:9> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x102872848 <col:9> 'int' lvalue ParmVar 0x102872720 'value' 'int'
`-FunctionDecl 0x102872b30 <line:16:1, line:89:1> main 'int (int, char **)'
  |-ParmVarDecl 0x1028728e0 <line:16:10, col:14> argc 'int'
  |-ParmVarDecl 0x102872a20 <col:20, col:31> argv 'char **':'char **'
  `-CompoundStmt 0x10287ad08 <col:34, line:89:1>
    |-DeclStmt 0x102873068 <line:17:2, col:69>
    | `-VarDecl 0x102872c30 <col:2, col:68> arr 'int [14]'
    |   `-InitListExpr 0x102872ef8 <col:14, col:68> 'int [14]'
    |     |-IntegerLiteral 0x102872c88 <col:16> 'int' 22
    |     |-IntegerLiteral 0x102872ca8 <col:20> 'int' 34
    |     |-IntegerLiteral 0x102872cc8 <col:24> 'int' 3
    |     |-IntegerLiteral 0x102872ce8 <col:27> 'int' 32
    |     |-IntegerLiteral 0x102872d08 <col:31> 'int' 82
    |     |-IntegerLiteral 0x102872d28 <col:35> 'int' 55
    |     |-IntegerLiteral 0x102872d48 <col:39> 'int' 89
    |     |-IntegerLiteral 0x102872d68 <col:43> 'int' 50
    |     |-IntegerLiteral 0x102872d88 <col:47> 'int' 37
    |     |-IntegerLiteral 0x102872da8 <col:51> 'int' 5
    |     |-IntegerLiteral 0x102872dc8 <col:54> 'int' 64
    |     |-IntegerLiteral 0x102872de8 <col:58> 'int' 35
    |     |-IntegerLiteral 0x102872e08 <col:62> 'int' 9
    |     `-IntegerLiteral 0x102872e28 <col:65> 'int' 70
    |-DeclStmt 0x102873108 <line:18:2, col:14>
    | `-VarDecl 0x102873090 <col:2, col:12> len 'int'
    |   `-IntegerLiteral 0x1028730e8 <col:12> 'int' 14
    |-DeclStmt 0x102873288 <line:19:2, col:16>
    | |-VarDecl 0x102873130 <col:2, col:6> i 'int'
    | |-VarDecl 0x1028731a0 <col:2, col:9> j 'int'
    | `-VarDecl 0x102873210 <col:2, col:12> temp 'int'
    |-DeclStmt 0x102873328 <line:20:2, col:13>
    | `-VarDecl 0x1028732b0 <col:2, col:12> sum 'int'
    |   `-IntegerLiteral 0x102873308 <col:12> 'int' 0
    |-BinaryOperator 0x1028734c8 <line:21:2, col:21> 'int' lvalue '='
    | |-DeclRefExpr 0x102873340 <col:2> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    | `-CallExpr 0x102873480 <col:8, col:21> 'int'
    |   |-ImplicitCastExpr 0x102873468 <col:8> 'int (*)(int)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x102873410 <col:8> 'int (int)' lvalue Function 0x1028260c0 'increment' 'int (int)'
    |   `-ImplicitCastExpr 0x1028734b0 <col:18> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x1028733c8 <col:18> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |-ForStmt 0x102873898 <line:22:2, line:29:2>
    | |-DeclStmt 0x102873578 <line:22:7, col:16>
    | | `-VarDecl 0x102873500 <col:7, col:15> i 'int'
    | |   `-IntegerLiteral 0x102873558 <col:15> 'int' 0
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | `-CompoundStmt 0x102873860 <col:20, line:29:2>
    |   |-CompoundAssignOperator 0x1028735f8 <line:23:3, col:10> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   | |-DeclRefExpr 0x102873590 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   | `-ImplicitCastExpr 0x1028735e0 <col:10> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1028735b8 <col:10> 'int' lvalue Var 0x102873500 'i' 'int'
    |   |-IfStmt 0x1028736c8 <line:24:3, line:25:4>
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x102873690 <line:24:7, col:12> '_Bool' '=='
    |   | | |-ImplicitCastExpr 0x102873678 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x102873630 <col:7> 'int' lvalue Var 0x102873500 'i' 'int'
    |   | | `-IntegerLiteral 0x102873658 <col:12> 'int' 8
    |   | |-BreakStmt 0x1028736b8 <line:25:4>
    |   | `-<<<NULL>>>
    |   |-IfStmt 0x102873790 <line:26:3, line:27:4>
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x102873758 <line:26:7, col:11> '_Bool' '<'
    |   | | |-ImplicitCastExpr 0x102873740 <col:7> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1028736f8 <col:7> 'int' lvalue Var 0x102873500 'i' 'int'
    |   | | `-IntegerLiteral 0x102873720 <col:11> 'int' 8
    |   | |-ContinueStmt 0x102873780 <line:27:4>
    |   | `-<<<NULL>>>
    |   `-CompoundAssignOperator 0x102873828 <line:28:3, col:10> 'int' lvalue '*=' ComputeLHSTy='int' ComputeResultTy='int'
    |     |-DeclRefExpr 0x1028737c0 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |     `-ImplicitCastExpr 0x102873810 <col:10> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1028737e8 <col:10> 'int' lvalue Var 0x102873500 'i' 'int'
    |-IfStmt 0x102873ce0 <line:30:2, line:36:25>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x102873938 <line:30:6, col:12> '_Bool' '>'
    | | |-ImplicitCastExpr 0x102873920 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1028738d8 <col:6> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    | | `-IntegerLiteral 0x102873900 <col:12> 'int' 100
    | |-BinaryOperator 0x1028739a8 <line:31:3, col:9> 'int' lvalue '='
    | | |-DeclRefExpr 0x102873960 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    | | `-IntegerLiteral 0x102873988 <col:9> 'int' 100
    | `-IfStmt 0x102873cb0 <line:32:7, line:36:25>
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x102873a30 <line:32:11, col:17> '_Bool' '>'
    |   | |-ImplicitCastExpr 0x102873a18 <col:11> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1028739d0 <col:11> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   | `-IntegerLiteral 0x1028739f8 <col:17> 'int' 50
    |   |-CompoundStmt 0x102873b08 <col:21, line:35:2>
    |   | |-BinaryOperator 0x102873aa0 <line:33:3, col:9> 'int' lvalue '='
    |   | | |-DeclRefExpr 0x102873a58 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   | | `-IntegerLiteral 0x102873a80 <col:9> 'int' 50
    |   | `-ReturnStmt 0x102873ae8 <line:34:3, col:10>
    |   |   `-IntegerLiteral 0x102873ac8 <col:10> 'int' 1
    |   `-BinaryOperator 0x102873c88 <line:36:3, col:25> 'int' lvalue ','
    |     |-CompoundAssignOperator 0x102873b78 <col:3, col:10> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |     | |-DeclRefExpr 0x102873b30 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |     | `-IntegerLiteral 0x102873b58 <col:10> 'int' 5
    |     `-BinaryOperator 0x102873c60 <col:13, col:25> 'int' lvalue '='
    |       |-DeclRefExpr 0x102873bb0 <col:13> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |       `-BinaryOperator 0x102873c38 <col:19, col:25> 'int' '+'
    |         |-ImplicitCastExpr 0x102873c20 <col:19> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x102873bd8 <col:19> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |         `-IntegerLiteral 0x102873c00 <col:25> 'int' 10
    |-SwitchStmt 0x102873d98 <line:38:2, line:46:2>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x102873d70 <line:38:10, col:16> 'int' '/'
    | | |-ImplicitCastExpr 0x102873d58 <col:10> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x102873d10 <col:10> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    | | `-IntegerLiteral 0x102873d38 <col:16> 'int' 10
    | `-CompoundStmt 0x102874008 <col:20, line:46:2>
    |   |-CaseStmt 0x102873de8 <line:39:2, line:40:9>
    |   | |-IntegerLiteral 0x102873dc8 <line:39:7> 'int' 1
    |   | |-<<<NULL>>>
    |   | `-BinaryOperator 0x102873e68 <line:40:3, col:9> 'int' lvalue '='
    |   |   |-DeclRefExpr 0x102873e20 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   |   `-IntegerLiteral 0x102873e48 <col:9> 'int' 20
    |   |-BreakStmt 0x102873e90 <line:41:3>
    |   |-CaseStmt 0x102873ec0 <line:42:2, line:43:9>
    |   | |-IntegerLiteral 0x102873ea0 <line:42:7> 'int' 2
    |   | |-<<<NULL>>>
    |   | `-BinaryOperator 0x102873f40 <line:43:3, col:9> 'int' lvalue '='
    |   |   |-DeclRefExpr 0x102873ef8 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   |   `-IntegerLiteral 0x102873f20 <col:9> 'int' 30
    |   `-DefaultStmt 0x102873fe8 <line:44:2, line:45:10>
    |     `-CompoundAssignOperator 0x102873fb0 <col:3, col:10> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |-DeclRefExpr 0x102873f68 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |       `-IntegerLiteral 0x102873f90 <col:10> 'int' 10
    |-CallExpr 0x102874100 <line:47:2, col:10> 'int'
    | |-ImplicitCastExpr 0x1028740e8 <col:2> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1028740c0 <col:2> 'int (int)' lvalue Function 0x1028727a0 'self' 'int (int)'
    | `-ImplicitCastExpr 0x102874130 <col:7> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x102874098 <col:7> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |-LabelStmt 0x10287a528 <line:49:1, line:67:2> 'label'
    | `-IfStmt 0x10287a4b8 <line:49:8, line:67:2>
    |   |-<<<NULL>>>
    |   |-ImplicitCastExpr 0x1028743c0 <line:49:12, col:54> '_Bool' <IntegralToBoolean>
    |   | `-ImplicitCastExpr 0x1028743a8 <col:12, col:54> 'int' <LValueToRValue>
    |   |   `-ConditionalOperator 0x102874378 <col:12, col:54> 'int' lvalue
    |   |     |-BinaryOperator 0x1028741a8 <col:12, col:19> '_Bool' '=='
    |   |     | |-ImplicitCastExpr 0x102874190 <col:12> 'int' <LValueToRValue>
    |   |     | | `-DeclRefExpr 0x102874148 <col:12> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   |     | `-IntegerLiteral 0x102874170 <col:19> 'int' 19
    |   |     |-ParenExpr 0x1028742e8 <col:24, col:44> 'int' lvalue
    |   |     | `-BinaryOperator 0x1028742c0 <col:25, col:42> 'int' lvalue ','
    |   |     |   |-BinaryOperator 0x102874218 <col:25, col:31> 'int' lvalue '='
    |   |     |   | |-DeclRefExpr 0x1028741d0 <col:25> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   |     |   | `-IntegerLiteral 0x1028741f8 <col:31> 'int' 20
    |   |     |   `-CompoundAssignOperator 0x102874288 <col:35, col:42> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |     |-DeclRefExpr 0x102874240 <col:35> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   |     |     `-IntegerLiteral 0x102874268 <col:42> 'int' 10
    |   |     `-BinaryOperator 0x102874350 <col:48, col:54> 'int' lvalue '='
    |   |       |-DeclRefExpr 0x102874308 <col:48> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   |       `-IntegerLiteral 0x102874330 <col:54> 'int' 30
    |   |-BinaryOperator 0x102879630 <line:50:3, col:9> 'int' lvalue '='
    |   | |-DeclRefExpr 0x1028743d8 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   | `-IntegerLiteral 0x102879610 <col:9> 'int' 10000
    |   `-CompoundStmt 0x10287a498 <line:51:7, line:67:2>
    |     `-ForStmt 0x10287a458 <line:52:3, line:66:4>
    |       |-<<<NULL>>>
    |       |-<<<NULL>>>
    |       |-BinaryOperator 0x1028796b8 <line:52:10, col:16> '_Bool' '>'
    |       | |-ImplicitCastExpr 0x1028796a0 <col:10> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0x102879658 <col:10> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |       | `-IntegerLiteral 0x102879680 <col:16> 'int' 0
    |       |-CompoundAssignOperator 0x102879728 <col:19, col:26> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       | |-DeclRefExpr 0x1028796e0 <col:19> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |       | `-IntegerLiteral 0x102879708 <col:26> 'int' 2
    |       `-SwitchStmt 0x1028797a0 <line:53:4, line:66:4>
    |         |-<<<NULL>>>
    |         |-ImplicitCastExpr 0x102879788 <line:53:12> 'int' <LValueToRValue>
    |         | `-DeclRefExpr 0x102879760 <col:12> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |         `-CompoundStmt 0x10287a428 <col:17, line:66:4>
    |           |-CaseStmt 0x1028797f0 <line:54:4, line:56:5>
    |           | |-IntegerLiteral 0x1028797d0 <line:54:9> 'int' 1
    |           | |-<<<NULL>>>
    |           | `-CaseStmt 0x102879848 <line:55:4, line:56:5>
    |           |   |-IntegerLiteral 0x102879828 <line:55:9> 'int' 2
    |           |   |-<<<NULL>>>
    |           |   `-BreakStmt 0x102879880 <line:56:5>
    |           |-CaseStmt 0x1028798b0 <line:57:4, line:58:8>
    |           | |-IntegerLiteral 0x102879890 <line:57:9> 'int' 3
    |           | |-<<<NULL>>>
    |           | `-UnaryOperator 0x102879910 <line:58:5, col:8> 'int' postfix '++'
    |           |   `-DeclRefExpr 0x1028798e8 <col:5> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |           `-ForStmt 0x10287a3e8 <line:59:5, line:65:7>
    |             |-BinaryOperator 0x102879978 <line:59:10, col:14> 'int' lvalue '='
    |             | |-DeclRefExpr 0x102879930 <col:10> 'int' lvalue Var 0x102873130 'i' 'int'
    |             | `-IntegerLiteral 0x102879958 <col:14> 'int' 0
    |             |-<<<NULL>>>
    |             |-BinaryOperator 0x102879a68 <col:17, col:27> '_Bool' '<'
    |             | |-ImplicitCastExpr 0x102879a50 <col:17> 'int' <LValueToRValue>
    |             | | `-DeclRefExpr 0x1028799a0 <col:17> 'int' lvalue Var 0x102873130 'i' 'int'
    |             | `-BinaryOperator 0x102879a28 <col:21, col:27> 'int' '-'
    |             |   |-ImplicitCastExpr 0x102879a10 <col:21> 'int' <LValueToRValue>
    |             |   | `-DeclRefExpr 0x1028799c8 <col:21> 'int' lvalue Var 0x102873090 'len' 'int'
    |             |   `-IntegerLiteral 0x1028799f0 <col:27> 'int' 1
    |             |-UnaryOperator 0x102879ab8 <col:30, col:31> 'int' postfix '++'
    |             | `-DeclRefExpr 0x102879a90 <col:30> 'int' lvalue Var 0x102873130 'i' 'int'
    |             `-ForStmt 0x10287a3a8 <line:60:6, line:65:7>
    |               |-BinaryOperator 0x102879b20 <line:60:11, col:15> 'int' lvalue '='
    |               | |-DeclRefExpr 0x102879ad8 <col:11> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |               | `-IntegerLiteral 0x102879b00 <col:15> 'int' 0
    |               |-<<<NULL>>>
    |               |-BinaryOperator 0x102879c78 <col:18, col:32> '_Bool' '<'
    |               | |-ImplicitCastExpr 0x102879c60 <col:18> 'int' <LValueToRValue>
    |               | | `-DeclRefExpr 0x102879b48 <col:18> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |               | `-BinaryOperator 0x102879c38 <col:22, col:32> 'int' '-'
    |               |   |-BinaryOperator 0x102879bd0 <col:22, col:28> 'int' '-'
    |               |   | |-ImplicitCastExpr 0x102879bb8 <col:22> 'int' <LValueToRValue>
    |               |   | | `-DeclRefExpr 0x102879b70 <col:22> 'int' lvalue Var 0x102873090 'len' 'int'
    |               |   | `-IntegerLiteral 0x102879b98 <col:28> 'int' 1
    |               |   `-ImplicitCastExpr 0x102879c20 <col:32> 'int' <LValueToRValue>
    |               |     `-DeclRefExpr 0x102879bf8 <col:32> 'int' lvalue Var 0x102873130 'i' 'int'
    |               |-UnaryOperator 0x102879cc8 <col:35, col:36> 'int' postfix '++'
    |               | `-DeclRefExpr 0x102879ca0 <col:35> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |               `-IfStmt 0x10287a378 <line:61:7, line:65:7>
    |                 |-<<<NULL>>>
    |                 |-BinaryOperator 0x102879ee0 <line:61:11, col:29> '_Bool' '>'
    |                 | |-ImplicitCastExpr 0x102879eb0 <col:11, col:16> 'int' <LValueToRValue>
    |                 | | `-ArraySubscriptExpr 0x102879d98 <col:11, col:16> 'int' lvalue
    |                 | |   |-ImplicitCastExpr 0x102879d68 <col:11> 'int *' <ArrayToPointerDecay>
    |                 | |   | `-DeclRefExpr 0x102879ce8 <col:11> 'int [14]' lvalue Var 0x102872c30 'arr' 'int [14]'
    |                 | |   `-ImplicitCastExpr 0x102879d80 <col:15> 'int' <LValueToRValue>
    |                 | |     `-DeclRefExpr 0x102879d10 <col:15> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |                 | `-ImplicitCastExpr 0x102879ec8 <col:20, col:29> 'int' <LValueToRValue>
    |                 |   `-ArraySubscriptExpr 0x102879e88 <col:20, col:29> 'int' lvalue
    |                 |     |-ImplicitCastExpr 0x102879e70 <col:20> 'int *' <ArrayToPointerDecay>
    |                 |     | `-DeclRefExpr 0x102879dc0 <col:20> 'int [14]' lvalue Var 0x102872c30 'arr' 'int [14]'
    |                 |     `-BinaryOperator 0x102879e48 <col:24, col:28> 'int' '+'
    |                 |       |-ImplicitCastExpr 0x102879e30 <col:24> 'int' <LValueToRValue>
    |                 |       | `-DeclRefExpr 0x102879de8 <col:24> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |                 |       `-IntegerLiteral 0x102879e10 <col:28> 'int' 1
    |                 |-CompoundStmt 0x10287a348 <col:32, line:65:7>
    |                 | |-BinaryOperator 0x102879ff0 <line:62:8, col:20> 'int' lvalue '='
    |                 | | |-DeclRefExpr 0x102879f08 <col:8> 'int' lvalue Var 0x102873210 'temp' 'int'
    |                 | | `-ImplicitCastExpr 0x102879fd8 <col:15, col:20> 'int' <LValueToRValue>
    |                 | |   `-ArraySubscriptExpr 0x102879fb0 <col:15, col:20> 'int' lvalue
    |                 | |     |-ImplicitCastExpr 0x102879f80 <col:15> 'int *' <ArrayToPointerDecay>
    |                 | |     | `-DeclRefExpr 0x102879f30 <col:15> 'int [14]' lvalue Var 0x102872c30 'arr' 'int [14]'
    |                 | |     `-ImplicitCastExpr 0x102879f98 <col:19> 'int' <LValueToRValue>
    |                 | |       `-DeclRefExpr 0x102879f58 <col:19> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |                 | |-BinaryOperator 0x10287a1c8 <line:63:8, col:26> 'int' lvalue '='
    |                 | | |-ArraySubscriptExpr 0x10287a098 <col:8, col:13> 'int' lvalue
    |                 | | | |-ImplicitCastExpr 0x10287a068 <col:8> 'int *' <ArrayToPointerDecay>
    |                 | | | | `-DeclRefExpr 0x10287a018 <col:8> 'int [14]' lvalue Var 0x102872c30 'arr' 'int [14]'
    |                 | | | `-ImplicitCastExpr 0x10287a080 <col:12> 'int' <LValueToRValue>
    |                 | | |   `-DeclRefExpr 0x10287a040 <col:12> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |                 | | `-ImplicitCastExpr 0x10287a1b0 <col:17, col:26> 'int' <LValueToRValue>
    |                 | |   `-ArraySubscriptExpr 0x10287a188 <col:17, col:26> 'int' lvalue
    |                 | |     |-ImplicitCastExpr 0x10287a170 <col:17> 'int *' <ArrayToPointerDecay>
    |                 | |     | `-DeclRefExpr 0x10287a0c0 <col:17> 'int [14]' lvalue Var 0x102872c30 'arr' 'int [14]'
    |                 | |     `-BinaryOperator 0x10287a148 <col:21, col:25> 'int' '+'
    |                 | |       |-ImplicitCastExpr 0x10287a130 <col:21> 'int' <LValueToRValue>
    |                 | |       | `-DeclRefExpr 0x10287a0e8 <col:21> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |                 | |       `-IntegerLiteral 0x10287a110 <col:25> 'int' 1
    |                 | `-BinaryOperator 0x10287a320 <line:64:8, col:21> 'int' lvalue '='
    |                 |   |-ArraySubscriptExpr 0x10287a2b8 <col:8, col:17> 'int' lvalue
    |                 |   | |-ImplicitCastExpr 0x10287a2a0 <col:8> 'int *' <ArrayToPointerDecay>
    |                 |   | | `-DeclRefExpr 0x10287a1f0 <col:8> 'int [14]' lvalue Var 0x102872c30 'arr' 'int [14]'
    |                 |   | `-BinaryOperator 0x10287a278 <col:12, col:16> 'int' '+'
    |                 |   |   |-ImplicitCastExpr 0x10287a260 <col:12> 'int' <LValueToRValue>
    |                 |   |   | `-DeclRefExpr 0x10287a218 <col:12> 'int' lvalue Var 0x1028731a0 'j' 'int'
    |                 |   |   `-IntegerLiteral 0x10287a240 <col:16> 'int' 1
    |                 |   `-ImplicitCastExpr 0x10287a308 <col:21> 'int' <LValueToRValue>
    |                 |     `-DeclRefExpr 0x10287a2e0 <col:21> 'int' lvalue Var 0x102873210 'temp' 'int'
    |                 `-<<<NULL>>>
    |-SwitchStmt 0x10287a588 <line:69:2, line:83:2>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x10287a570 <line:69:10> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x10287a548 <col:10> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    | `-CompoundStmt 0x10287a8b0 <col:15, line:83:2>
    |   |-CaseStmt 0x10287a610 <line:70:2, line:74:4>
    |   | |-IntegerLiteral 0x10287a5b8 <line:70:7> 'int' 1
    |   | |-<<<NULL>>>
    |   | `-IfStmt 0x10287a6a0 <line:71:3, line:74:4>
    |   |   |-<<<NULL>>>
    |   |   |-ImplicitCastExpr 0x10287a668 <line:71:7> '_Bool' <IntegralToBoolean>
    |   |   | `-IntegerLiteral 0x10287a648 <col:7> 'int' 1
    |   |   |-NullStmt 0x10287a680 <line:72:4>
    |   |   `-BreakStmt 0x10287a690 <line:74:4>
    |   |-CaseStmt 0x10287a6f0 <line:75:2, line:76:3>
    |   | |-IntegerLiteral 0x10287a6d0 <line:75:7> 'int' 2
    |   | |-<<<NULL>>>
    |   | `-BreakStmt 0x10287a728 <line:76:3>
    |   |-CaseStmt 0x10287a758 <line:77:2, line:78:8>
    |   | |-IntegerLiteral 0x10287a738 <line:77:7> 'int' 3
    |   | |-<<<NULL>>>
    |   | `-GotoStmt 0x10287a790 <line:78:3, col:8> 'label' 0x10287a4f0
    |   |-CaseStmt 0x10287a7c8 <line:79:2, line:81:6>
    |   | |-IntegerLiteral 0x10287a7a8 <line:79:7> 'int' 4
    |   | |-<<<NULL>>>
    |   | `-DefaultStmt 0x10287a848 <line:80:2, line:81:6>
    |   |   `-UnaryOperator 0x10287a828 <col:3, col:6> 'int' postfix '++'
    |   |     `-DeclRefExpr 0x10287a800 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |   `-UnaryOperator 0x10287a890 <line:82:3, col:6> 'int' postfix '--'
    |     `-DeclRefExpr 0x10287a868 <col:3> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    |-DeclStmt 0x10287aaa8 <line:85:2, col:26>
    | `-VarDecl 0x10287aa50 <col:2, col:25> array 'int [100][100][100]'
    |-BinaryOperator 0x10287aca0 <line:86:2, col:24> 'int' lvalue '='
    | |-DeclRefExpr 0x10287aac0 <col:2> 'int' lvalue Var 0x1028732b0 'sum' 'int'
    | `-ImplicitCastExpr 0x10287ac88 <col:8, col:24> 'int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x10287ac60 <col:8, col:24> 'int' lvalue
    |     |-ImplicitCastExpr 0x10287ac48 <col:8, col:20> 'int *' <ArrayToPointerDecay>
    |     | `-ArraySubscriptExpr 0x10287ac00 <col:8, col:20> 'int [100]' lvalue
    |     |   |-ImplicitCastExpr 0x10287abe8 <col:8, col:16> 'int (*)[100]' <ArrayToPointerDecay>
    |     |   | `-ArraySubscriptExpr 0x10287ab70 <col:8, col:16> 'int [100][100]' lvalue
    |     |   |   |-ImplicitCastExpr 0x10287ab58 <col:8> 'int (*)[100][100]' <ArrayToPointerDecay>
    |     |   |   | `-DeclRefExpr 0x10287aae8 <col:8> 'int [100][100][100]' lvalue Var 0x10287aa50 'array' 'int [100][100][100]'
    |     |   |   `-IntegerLiteral 0x10287ab10 <col:14> 'int' 10
    |     |   `-IntegerLiteral 0x10287ab98 <col:18> 'int' 10
    |     `-IntegerLiteral 0x10287ac28 <col:22> 'int' 10
    `-ReturnStmt 0x10287ace8 <line:88:2, col:9>
      `-IntegerLiteral 0x10287acc8 <col:9> 'int' 0
