digraph {
"Empty  at (0,0:0) 0x102872b30" -> "Empty  at (0,0:0) 0x10287abf8"
"Empty  at (0,0:0) 0x10287abf8" -> "int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,2:69) 0x102873068"
"int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,2:69) 0x102873068" -> "int len  = 14  at (18,2:14) 0x102873108"
"int len  = 14  at (18,2:14) 0x102873108" -> "int i , int j , int temp   at (19,2:16) 0x102873288"
"int i , int j , int temp   at (19,2:16) 0x102873288" -> "int sum  = 0  at (20,2:13) 0x102873328"
"int sum  = 0  at (20,2:13) 0x102873328" -> "(sum = increment(sum))  at (21,2:21) 0x1028734c8"
"(sum = increment(sum))  at (21,2:21) 0x1028734c8" -> "int i  = 0  at (22,7:16) 0x102873578"
"int i  = 0  at (22,7:16) 0x102873578" -> "for no_cond at (22:30,2:2) 0x102873940"
"for no_cond at (22:30,2:2) 0x102873940" -> "if (sum > 100) at (31:36,2:25) 0x102873d40"
"for no_cond at (22:30,2:2) 0x102873940" -> "(sum += i)  at (23,3:10) 0x1028735f8"
"if (sum > 100) at (31:36,2:25) 0x102873d40" -> "(sum = 100)  at (32,3:9) 0x102873a50"
"if (sum > 100) at (31:36,2:25) 0x102873d40" -> "if (sum > 50) at (33:36,7:25) 0x102873d10"
"(sum = 100)  at (32,3:9) 0x102873a50" -> "switch (sum / 10) at (38:46,2:2) 0x102873df8"
"switch (sum / 10) at (38:46,2:2) 0x102873df8" -> "1  at (39:40,2:9) 0x102873e48"
"switch (sum / 10) at (38:46,2:2) 0x102873df8" -> "(sum += 10)  at (45,3:10) 0x102874010"
"switch (sum / 10) at (38:46,2:2) 0x102873df8" -> "2  at (42:43,2:9) 0x102873f20"
"1  at (39:40,2:9) 0x102873e48" -> "(sum = 20)  at (40,3:9) 0x102873ec8"
"(sum = 20)  at (40,3:9) 0x102873ec8" -> "self(sum)  at (47,2:10) 0x102874160"
"self(sum)  at (47,2:10) 0x102874160" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:71,8:2) 0x10287a7c0"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:71,8:2) 0x10287a7c0" -> "for (sum > 0) at (52:66,3:4) 0x10287a4d8"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:71,8:2) 0x10287a7c0" -> "(sum = 10000)  at (50,3:9) 0x1028796b8"
"for (sum > 0) at (52:66,3:4) 0x10287a4d8" -> "switch sum at (53:66,4:4) 0x102879828"
"for (sum > 0) at (52:66,3:4) 0x10287a4d8" -> "if 1 at (67:70,3:3) 0x10287a768"
"switch sum at (53:66,4:4) 0x102879828" -> "3  at (57:58,4:8) 0x102879938"
"switch sum at (53:66,4:4) 0x102879828" -> "1  at (54:56,4:5) 0x102879878"
"switch sum at (53:66,4:4) 0x102879828" -> "2  at (55:56,4:5) 0x1028798d0"
"3  at (57:58,4:8) 0x102879938" -> "sum++  at (58,5:8) 0x102879998"
"sum++  at (58,5:8) 0x102879998" -> "(i = 0)  at (59,10:14) 0x102879a00"
"(i = 0)  at (59,10:14) 0x102879a00" -> "for (i < (len - 1)) at (59:65,5:7) 0x10287a468"
"for (i < (len - 1)) at (59:65,5:7) 0x10287a468" -> "(j = 0)  at (60,11:15) 0x102879ba8"
"for (i < (len - 1)) at (59:65,5:7) 0x10287a468" -> "(sum += 2)  at (52,19:26) 0x1028797b0"
"(j = 0)  at (60,11:15) 0x102879ba8" -> "for (j < ((len - 1) - i)) at (60:65,6:7) 0x10287a428"
"for (j < ((len - 1) - i)) at (60:65,6:7) 0x10287a428" -> "i++  at (59,30:31) 0x102879b40"
"for (j < ((len - 1) - i)) at (60:65,6:7) 0x10287a428" -> "if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x10287a3f8"
"i++  at (59,30:31) 0x102879b40" -> "for (i < (len - 1)) at (59:65,5:7) 0x10287a468"
"if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x10287a3f8" -> "j++  at (60,35:36) 0x102879d50"
"if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x10287a3f8" -> "(temp = arr[j])  at (62,8:20) 0x10287a070"
"j++  at (60,35:36) 0x102879d50" -> "for (j < ((len - 1) - i)) at (60:65,6:7) 0x10287a428"
"(temp = arr[j])  at (62,8:20) 0x10287a070" -> "(arr[j] = arr[(j + 1)])  at (63,8:26) 0x10287a248"
"(arr[j] = arr[(j + 1)])  at (63,8:26) 0x10287a248" -> "(arr[(j + 1)] = temp)  at (64,8:21) 0x10287a3a0"
"(arr[(j + 1)] = temp)  at (64,8:21) 0x10287a3a0" -> "j++  at (60,35:36) 0x102879d50"
"(sum += 2)  at (52,19:26) 0x1028797b0" -> "for (sum > 0) at (52:66,3:4) 0x10287a4d8"
"1  at (54:56,4:5) 0x102879878" -> "2  at (55:56,4:5) 0x1028798d0"
"2  at (55:56,4:5) 0x1028798d0" -> "(sum += 2)  at (52,19:26) 0x1028797b0"
"if 1 at (67:70,3:3) 0x10287a768" -> "switch sum at (73:87,2:2) 0x10287a888"
"if 1 at (67:70,3:3) 0x10287a768" -> "if (sum == 10) at (68:69,4:13) 0x10287a718"
"switch sum at (73:87,2:2) 0x10287a888" -> "4  at (83:85,2:6) 0x10287aa90"
"switch sum at (73:87,2:2) 0x10287a888" -> "2  at (79:80,2:3) 0x10287a9b8"
"switch sum at (73:87,2:2) 0x10287a888" -> "3  at (81:82,2:8) 0x10287aa20"
"switch sum at (73:87,2:2) 0x10287a888" -> "1  at (74:78,2:4) 0x10287a8d8"
"switch sum at (73:87,2:2) 0x10287a888" -> "sum++  at (85,3:6) 0x10287aaf0"
"4  at (83:85,2:6) 0x10287aa90" -> "sum++  at (85,3:6) 0x10287aaf0"
"sum++  at (85,3:6) 0x10287aaf0" -> "sum--  at (86,3:6) 0x10287ab58"
"sum--  at (86,3:6) 0x10287ab58" -> "ReturnStmt(0)  at (89,2:9) 0x10287abd8"
"2  at (79:80,2:3) 0x10287a9b8" -> "ReturnStmt(0)  at (89,2:9) 0x10287abd8"
"3  at (81:82,2:8) 0x10287aa20" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:71,8:2) 0x10287a7c0"
"1  at (74:78,2:4) 0x10287a8d8" -> "if 1 at (75:78,3:4) 0x10287a968"
"if 1 at (75:78,3:4) 0x10287a968" -> "2  at (79:80,2:3) 0x10287a9b8"
"if 1 at (75:78,3:4) 0x10287a968" -> "ReturnStmt(0)  at (89,2:9) 0x10287abd8"
"if (sum == 10) at (68:69,4:13) 0x10287a718" -> "switch sum at (73:87,2:2) 0x10287a888"
"if (sum == 10) at (68:69,4:13) 0x10287a718" -> "self(sum)  at (69,5:13) 0x10287a6d0"
"self(sum)  at (69,5:13) 0x10287a6d0" -> "switch sum at (73:87,2:2) 0x10287a888"
"(sum = 10000)  at (50,3:9) 0x1028796b8" -> "switch sum at (73:87,2:2) 0x10287a888"
"(sum += 10)  at (45,3:10) 0x102874010" -> "self(sum)  at (47,2:10) 0x102874160"
"2  at (42:43,2:9) 0x102873f20" -> "(sum = 30)  at (43,3:9) 0x102873fa0"
"(sum = 30)  at (43,3:9) 0x102873fa0" -> "(sum += 10)  at (45,3:10) 0x102874010"
"if (sum > 50) at (33:36,7:25) 0x102873d10" -> "((sum -= 5) , (sum = (sum + 10)))  at (36,3:25) 0x102873ce8"
"if (sum > 50) at (33:36,7:25) 0x102873d10" -> "(sum = 50)  at (34,3:9) 0x102873b48"
"((sum -= 5) , (sum = (sum + 10)))  at (36,3:25) 0x102873ce8" -> "switch (sum / 10) at (38:46,2:2) 0x102873df8"
"(sum = 50)  at (34,3:9) 0x102873b48" -> "switch (sum / 10) at (38:46,2:2) 0x102873df8"
"(sum += i)  at (23,3:10) 0x1028735f8" -> "if (i == 8) at (24:25,3:4) 0x1028736c8"
"if (i == 8) at (24:25,3:4) 0x1028736c8" -> "if (sum > 100) at (31:36,2:25) 0x102873d40"
"if (i == 8) at (24:25,3:4) 0x1028736c8" -> "if (i < 8) at (26:27,3:4) 0x102873790"
"if (i < 8) at (26:27,3:4) 0x102873790" -> "for no_cond at (22:30,2:2) 0x102873940"
"if (i < 8) at (26:27,3:4) 0x102873790" -> "(sum *= i)  at (28,3:10) 0x102873828"
"(sum *= i)  at (28,3:10) 0x102873828" -> "(sum -= i)  at (29,3:10) 0x1028738c8"
"(sum -= i)  at (29,3:10) 0x1028738c8" -> "for no_cond at (22:30,2:2) 0x102873940"
}