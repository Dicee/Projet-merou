|   |-ForStmt 0x102872c10 <line:19:2, line:21:2>
|   | |-DeclStmt 0x102872a68 <line:19:7, col:16>
|   | | `-VarDecl 0x1028729f0 <col:7, col:15> i 'int'
|   | |   `-IntegerLiteral 0x102872a48 <col:15> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x102872ae0 <col:18, col:22> '_Bool' '<'
|   | | |-ImplicitCastExpr 0x102872ac8 <col:18> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x102872a80 <col:18> 'int' lvalue Var 0x1028729f0 'i' 'int'
|   | | `-IntegerLiteral 0x102872aa8 <col:22> 'int' 10
|   | |-UnaryOperator 0x102872b30 <col:26, col:27> 'int' postfix '++'
|   | | `-DeclRefExpr 0x102872b08 <col:26> 'int' lvalue Var 0x1028729f0 'i' 'int'
|   | `-CompoundStmt 0x102872bf0 <col:31, line:21:2>
|   |   |-BreakStmt 0x1021731e8 <line:32:4>
|   |   `-CompoundAssignOperator 0x102872bb8 <line:20:3, col:10> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x102872b50 <col:3> 'int' lvalue Var 0x102872570 'sum' 'int'
|   |     `-ImplicitCastExpr 0x102872ba0 <col:10> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x102872b78 <col:10> 'int' lvalue Var 0x1028729f0 'i' 'int'