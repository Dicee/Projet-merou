digraph {
"static char [100]   at (0,23:23) 0xc0d450"
"int (int) self(int value)  at (12:14,1:1) 0xc0d890" -> "ReturnStmt(value)  at (13,2:9) 0xc0d930"
"ReturnStmt(value)  at (13,2:9) 0xc0d930"
"int (int, char **) main(int argc, char ** argv)  at (16:89,1:1) 0xc0da50" -> "int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,2:69) 0xc0de28"
"int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,2:69) 0xc0de28" -> "int len  = 14  at (18,2:14) 0xc0dea0"
"int len  = 14  at (18,2:14) 0xc0dea0" -> "int i , int j , int temp   at (19,2:16) 0xc51f00"
"int i , int j , int temp   at (19,2:16) 0xc51f00" -> "int sum  = 0  at (20,2:13) 0xc51f70"
"int sum  = 0  at (20,2:13) 0xc51f70" -> "(sum = increment(sum))  at (21,2:21) 0xc52068"
"(sum = increment(sum))  at (21,2:21) 0xc52068" -> "int i  = 0  at (22,7:16) 0xc520e0"
"int i  = 0  at (22,7:16) 0xc520e0" -> "for no_cond at (22:29,2:2) 0xc522e0"
"for no_cond at (22:29,2:2) 0xc522e0" -> "if (sum > 100) at (30:36,2:25) 0xc525d0"
"for no_cond at (22:29,2:2) 0xc522e0" -> "(sum += i)  at (23,3:10) 0xc52130"
"if (sum > 100) at (30:36,2:25) 0xc525d0" -> "(sum = 100)  at (31,3:9) 0xc523a0"
"if (sum > 100) at (30:36,2:25) 0xc525d0" -> "if (sum > 50) at (32:36,7:25) 0xc525b0"
"(sum = 100)  at (31,3:9) 0xc523a0" -> "switch (sum / 10) at (38:46,2:2) 0xc52650"
"switch (sum / 10) at (38:46,2:2) 0xc52650" -> "2  at (42:43,2:9) 0xc52728"
"switch (sum / 10) at (38:46,2:2) 0xc52650" -> "1  at (39:40,2:9) 0xc52690"
"switch (sum / 10) at (38:46,2:2) 0xc52650" -> "(sum += 10)  at (45,3:10) 0xc527d0"
"2  at (42:43,2:9) 0xc52728" -> "(sum = 30)  at (43,3:9) 0xc52780"
"(sum = 30)  at (43,3:9) 0xc52780" -> "(sum += 10)  at (45,3:10) 0xc527d0"
"(sum += 10)  at (45,3:10) 0xc527d0" -> "self(sum)  at (47,2:10) 0xc528a0"
"self(sum)  at (47,2:10) 0xc528a0" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0xc53470"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0xc53470" -> "for (sum > 0) at (52:66,3:4) 0xc53430"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0xc53470" -> "(sum = 10000)  at (50,3:9) 0xc52ad0"
"for (sum > 0) at (52:66,3:4) 0xc53430" -> "switch sum at (53:66,4:4) 0xc52bc8"
"for (sum > 0) at (52:66,3:4) 0xc53430" -> "switch sum at (69:83,2:2) 0xc534f8"
"switch sum at (53:66,4:4) 0xc52bc8" -> "3  at (57:58,4:8) 0xc52c90"
"switch sum at (53:66,4:4) 0xc52bc8" -> "1  at (54:56,4:5) 0xc52c08"
"switch sum at (53:66,4:4) 0xc52bc8" -> "2  at (55:56,4:5) 0xc52c48"
"3  at (57:58,4:8) 0xc52c90" -> "sum++  at (58,5:8) 0xc52cc8"
"sum++  at (58,5:8) 0xc52cc8" -> "(i = 0)  at (59,10:14) 0xc52d18"
"(i = 0)  at (59,10:14) 0xc52d18" -> "for (i < (len - 1)) at (59:65,5:7) 0xc533e8"
"for (i < (len - 1)) at (59:65,5:7) 0xc533e8" -> "(sum += 2)  at (52,19:26) 0xc52b80"
"for (i < (len - 1)) at (59:65,5:7) 0xc533e8" -> "(j = 0)  at (60,11:15) 0xc52e38"
"(sum += 2)  at (52,19:26) 0xc52b80" -> "for (sum > 0) at (52:66,3:4) 0xc53430"
"(j = 0)  at (60,11:15) 0xc52e38" -> "for (j < ((len - 1) - i)) at (60:65,6:7) 0xc533c0"
"for (j < ((len - 1) - i)) at (60:65,6:7) 0xc533c0" -> "i++  at (59,30:31) 0xc52de8"
"for (j < ((len - 1) - i)) at (60:65,6:7) 0xc533c0" -> "if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0xc533a0"
"i++  at (59,30:31) 0xc52de8" -> "for (i < (len - 1)) at (59:65,5:7) 0xc533e8"
"if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0xc533a0" -> "j++  at (60,35:36) 0xc52f58"
"if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0xc533a0" -> "(temp = arr[j])  at (62,8:20) 0xc53158"
"j++  at (60,35:36) 0xc52f58" -> "for (j < ((len - 1) - i)) at (60:65,6:7) 0xc533c0"
"(temp = arr[j])  at (62,8:20) 0xc53158" -> "(arr[j] = arr[(j + 1)])  at (63,8:26) 0xc53288"
"(arr[j] = arr[(j + 1)])  at (63,8:26) 0xc53288" -> "(arr[(j + 1)] = temp)  at (64,8:21) 0xc53368"
"(arr[(j + 1)] = temp)  at (64,8:21) 0xc53368" -> "j++  at (60,35:36) 0xc52f58"
"1  at (54:56,4:5) 0xc52c08" -> "2  at (55:56,4:5) 0xc52c48"
"2  at (55:56,4:5) 0xc52c48" -> "(sum += 2)  at (52,19:26) 0xc52b80"
"switch sum at (69:83,2:2) 0xc534f8" -> "3  at (77:78,2:8) 0xc53628"
"switch sum at (69:83,2:2) 0xc534f8" -> "2  at (75:76,2:3) 0xc535e0"
"switch sum at (69:83,2:2) 0xc534f8" -> "4  at (79:81,2:6) 0xc53678"
"switch sum at (69:83,2:2) 0xc534f8" -> "sum++  at (81,3:6) 0xc536b0"
"switch sum at (69:83,2:2) 0xc534f8" -> "1  at (70:74,2:4) 0xc53538"
"3  at (77:78,2:8) 0xc53628" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0xc53470"
"2  at (75:76,2:3) 0xc535e0" -> "int [100][100][100] array   at (85,2:26) 0xc53890"
"int [100][100][100] array   at (85,2:26) 0xc53890" -> "(sum = array[10][10][10])  at (86,2:24) 0xc539e8"
"(sum = array[10][10][10])  at (86,2:24) 0xc539e8" -> "ReturnStmt(0)  at (88,2:9) 0xc53a20"
"ReturnStmt(0)  at (88,2:9) 0xc53a20"
"4  at (79:81,2:6) 0xc53678" -> "sum++  at (81,3:6) 0xc536b0"
"sum++  at (81,3:6) 0xc536b0" -> "sum--  at (82,3:6) 0xc536f8"
"sum--  at (82,3:6) 0xc536f8" -> "int [100][100][100] array   at (85,2:26) 0xc53890"
"1  at (70:74,2:4) 0xc53538" -> "if 1 at (71:74,3:4) 0xc535a0"
"if 1 at (71:74,3:4) 0xc535a0" -> "2  at (75:76,2:3) 0xc535e0"
"if 1 at (71:74,3:4) 0xc535a0" -> "int [100][100][100] array   at (85,2:26) 0xc53890"
"(sum = 10000)  at (50,3:9) 0xc52ad0" -> "switch sum at (69:83,2:2) 0xc534f8"
"1  at (39:40,2:9) 0xc52690" -> "(sum = 20)  at (40,3:9) 0xc526e8"
"(sum = 20)  at (40,3:9) 0xc526e8" -> "self(sum)  at (47,2:10) 0xc528a0"
"if (sum > 50) at (32:36,7:25) 0xc525b0" -> "(sum = 50)  at (33,3:9) 0xc52450"
"if (sum > 50) at (32:36,7:25) 0xc525b0" -> "((sum -= 5) , (sum = (sum + 10)))  at (36,3:25) 0xc52598"
"(sum = 50)  at (33,3:9) 0xc52450" -> "ReturnStmt(1)  at (34,3:10) 0xc52488"
"ReturnStmt(1)  at (34,3:10) 0xc52488"
"((sum -= 5) , (sum = (sum + 10)))  at (36,3:25) 0xc52598" -> "switch (sum / 10) at (38:46,2:2) 0xc52650"
"(sum += i)  at (23,3:10) 0xc52130" -> "if (i == 8) at (24:25,3:4) 0xc521b8"
"if (i == 8) at (24:25,3:4) 0xc521b8" -> "if (i < 8) at (26:27,3:4) 0xc52240"
"if (i == 8) at (24:25,3:4) 0xc521b8" -> "if (sum > 100) at (30:36,2:25) 0xc525d0"
"if (i < 8) at (26:27,3:4) 0xc52240" -> "(sum *= i)  at (28,3:10) 0xc522a0"
"if (i < 8) at (26:27,3:4) 0xc52240" -> "for no_cond at (22:29,2:2) 0xc522e0"
"(sum *= i)  at (28,3:10) 0xc522a0" -> "for no_cond at (22:29,2:2) 0xc522e0"
"void (int &, int) increment(int & value, int steps)  at (8:10,1:1) 0xc0d730" -> "(value += steps)  at (9,2:11) 0xc0d7e8"
"(value += steps)  at (9,2:11) 0xc0d7e8"
"int globVar  = 0  at (2,1:15) 0xc0d490"
}