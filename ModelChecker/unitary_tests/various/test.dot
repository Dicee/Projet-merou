digraph {
"static char [100]   at (0,23:23) 0x2f0c420"
"int (int) self(int value)  at (12:14,1:1) 0x2f0c860" -> "ReturnStmt(value)  at (13,2:9) 0x2f0c900"
"ReturnStmt(value)  at (13,2:9) 0x2f0c900"
"int (int, char **) main(int argc, ** :char)  at (16:89,1:1) 0x2f0ca80" -> "int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,2:69) 0x2f0ce58"
"int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,2:69) 0x2f0ce58" -> "int len  = 14  at (18,2:14) 0x2f0ced0"
"int len  = 14  at (18,2:14) 0x2f0ced0" -> "int i , int j , int temp   at (19,2:16) 0x2f51050"
"int i , int j , int temp   at (19,2:16) 0x2f51050" -> "int sum  = 0  at (20,2:13) 0x2f510c0"
"int sum  = 0  at (20,2:13) 0x2f510c0" -> "(sum = increment(sum))  at (21,2:21) 0x2f511b8"
"(sum = increment(sum))  at (21,2:21) 0x2f511b8" -> "int i  = 0  at (22,7:16) 0x2f51230"
"int i  = 0  at (22,7:16) 0x2f51230" -> "for no_cond at (22:29,2:2) 0x2f51430"
"for no_cond at (22:29,2:2) 0x2f51430" -> "if (sum > 100) at (30:36,2:25) 0x2f51720"
"for no_cond at (22:29,2:2) 0x2f51430" -> "(sum += i)  at (23,3:10) 0x2f51280"
"if (sum > 100) at (30:36,2:25) 0x2f51720" -> "(sum = 100)  at (31,3:9) 0x2f514f0"
"if (sum > 100) at (30:36,2:25) 0x2f51720" -> "if (sum > 50) at (32:36,7:25) 0x2f51700"
"(sum = 100)  at (31,3:9) 0x2f514f0" -> "switch (sum / 10) at (38:46,2:2) 0x2f517a0"
"switch (sum / 10) at (38:46,2:2) 0x2f517a0" -> "1  at (39:40,2:9) 0x2f517e0"
"switch (sum / 10) at (38:46,2:2) 0x2f517a0" -> "2  at (42:43,2:9) 0x2f51878"
"switch (sum / 10) at (38:46,2:2) 0x2f517a0" -> "(sum += 10)  at (45,3:10) 0x2f51920"
"1  at (39:40,2:9) 0x2f517e0" -> "(sum = 20)  at (40,3:9) 0x2f51838"
"(sum = 20)  at (40,3:9) 0x2f51838" -> "self(sum)  at (47,2:10) 0x2f519f0"
"self(sum)  at (47,2:10) 0x2f519f0" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0x2f525d0"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0x2f525d0" -> "(sum = 10000)  at (50,3:9) 0x2f51c20"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0x2f525d0" -> "for (sum > 0) at (52:66,3:4) 0x2f52590"
"(sum = 10000)  at (50,3:9) 0x2f51c20" -> "switch sum at (69:83,2:2) 0x2f52658"
"switch sum at (69:83,2:2) 0x2f52658" -> "2  at (75:76,2:3) 0x2f52740"
"switch sum at (69:83,2:2) 0x2f52658" -> "1  at (70:74,2:4) 0x2f52698"
"switch sum at (69:83,2:2) 0x2f52658" -> "4  at (79:81,2:6) 0x2f527d8"
"switch sum at (69:83,2:2) 0x2f52658" -> "3  at (77:78,2:8) 0x2f52788"
"switch sum at (69:83,2:2) 0x2f52658" -> "sum++  at (81,3:6) 0x2f52810"
"2  at (75:76,2:3) 0x2f52740" -> "int [100][100][100] array   at (85,2:26) 0x2f529f0"
"int [100][100][100] array   at (85,2:26) 0x2f529f0" -> "(sum = array[10][10][10])  at (86,2:24) 0x2f52b48"
"(sum = array[10][10][10])  at (86,2:24) 0x2f52b48" -> "ReturnStmt(0)  at (88,2:9) 0x2f52b80"
"ReturnStmt(0)  at (88,2:9) 0x2f52b80"
"1  at (70:74,2:4) 0x2f52698" -> "if 1 at (71:74,3:4) 0x2f52700"
"if 1 at (71:74,3:4) 0x2f52700" -> "int [100][100][100] array   at (85,2:26) 0x2f529f0"
"if 1 at (71:74,3:4) 0x2f52700" -> "2  at (75:76,2:3) 0x2f52740"
"4  at (79:81,2:6) 0x2f527d8" -> "sum++  at (81,3:6) 0x2f52810"
"sum++  at (81,3:6) 0x2f52810" -> "sum--  at (82,3:6) 0x2f52858"
"sum--  at (82,3:6) 0x2f52858" -> "int [100][100][100] array   at (85,2:26) 0x2f529f0"
"3  at (77:78,2:8) 0x2f52788" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0x2f525d0"
"for (sum > 0) at (52:66,3:4) 0x2f52590" -> "switch sum at (69:83,2:2) 0x2f52658"
"for (sum > 0) at (52:66,3:4) 0x2f52590" -> "switch sum at (53:66,4:4) 0x2f51d18"
"switch sum at (53:66,4:4) 0x2f51d18" -> "3  at (57:58,4:8) 0x2f51de0"
"switch sum at (53:66,4:4) 0x2f51d18" -> "2  at (55:56,4:5) 0x2f51d98"
"switch sum at (53:66,4:4) 0x2f51d18" -> "1  at (54:56,4:5) 0x2f51d58"
"3  at (57:58,4:8) 0x2f51de0" -> "sum++  at (58,5:8) 0x2f51e18"
"sum++  at (58,5:8) 0x2f51e18" -> "(i = 0)  at (59,10:14) 0x2f51e68"
"(i = 0)  at (59,10:14) 0x2f51e68" -> "for (i < (len - 1)) at (59:65,5:7) 0x2f52548"
"for (i < (len - 1)) at (59:65,5:7) 0x2f52548" -> "(sum += 2)  at (52,19:26) 0x2f51cd0"
"for (i < (len - 1)) at (59:65,5:7) 0x2f52548" -> "(j = 0)  at (60,11:15) 0x2f51f88"
"(sum += 2)  at (52,19:26) 0x2f51cd0" -> "for (sum > 0) at (52:66,3:4) 0x2f52590"
"(j = 0)  at (60,11:15) 0x2f51f88" -> "for (j < ((len - 1) - i)) at (60:65,6:7) 0x2f52520"
"for (j < ((len - 1) - i)) at (60:65,6:7) 0x2f52520" -> "i++  at (59,30:31) 0x2f51f38"
"for (j < ((len - 1) - i)) at (60:65,6:7) 0x2f52520" -> "if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x2f52500"
"i++  at (59,30:31) 0x2f51f38" -> "for (i < (len - 1)) at (59:65,5:7) 0x2f52548"
"if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x2f52500" -> "(temp = arr[j])  at (62,8:20) 0x2f522b8"
"if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x2f52500" -> "j++  at (60,35:36) 0x2f520b0"
"(temp = arr[j])  at (62,8:20) 0x2f522b8" -> "(arr[j] = arr[(j + 1)])  at (63,8:26) 0x2f523e8"
"(arr[j] = arr[(j + 1)])  at (63,8:26) 0x2f523e8" -> "(arr[(j + 1)] = temp)  at (64,8:21) 0x2f524c8"
"(arr[(j + 1)] = temp)  at (64,8:21) 0x2f524c8" -> "j++  at (60,35:36) 0x2f520b0"
"j++  at (60,35:36) 0x2f520b0" -> "for (j < ((len - 1) - i)) at (60:65,6:7) 0x2f52520"
"2  at (55:56,4:5) 0x2f51d98" -> "(sum += 2)  at (52,19:26) 0x2f51cd0"
"1  at (54:56,4:5) 0x2f51d58" -> "2  at (55:56,4:5) 0x2f51d98"
"2  at (42:43,2:9) 0x2f51878" -> "(sum = 30)  at (43,3:9) 0x2f518d0"
"(sum = 30)  at (43,3:9) 0x2f518d0" -> "(sum += 10)  at (45,3:10) 0x2f51920"
"(sum += 10)  at (45,3:10) 0x2f51920" -> "self(sum)  at (47,2:10) 0x2f519f0"
"if (sum > 50) at (32:36,7:25) 0x2f51700" -> "(sum = 50)  at (33,3:9) 0x2f515a0"
"if (sum > 50) at (32:36,7:25) 0x2f51700" -> "((sum -= 5) , (sum = (sum + 10)))  at (36,3:25) 0x2f516e8"
"(sum = 50)  at (33,3:9) 0x2f515a0" -> "ReturnStmt(1)  at (34,3:10) 0x2f515d8"
"ReturnStmt(1)  at (34,3:10) 0x2f515d8"
"((sum -= 5) , (sum = (sum + 10)))  at (36,3:25) 0x2f516e8" -> "switch (sum / 10) at (38:46,2:2) 0x2f517a0"
"(sum += i)  at (23,3:10) 0x2f51280" -> "if (i == 8) at (24:25,3:4) 0x2f51308"
"if (i == 8) at (24:25,3:4) 0x2f51308" -> "if (i < 8) at (26:27,3:4) 0x2f51390"
"if (i == 8) at (24:25,3:4) 0x2f51308" -> "if (sum > 100) at (30:36,2:25) 0x2f51720"
"if (i < 8) at (26:27,3:4) 0x2f51390" -> "for no_cond at (22:29,2:2) 0x2f51430"
"if (i < 8) at (26:27,3:4) 0x2f51390" -> "(sum *= i)  at (28,3:10) 0x2f513f0"
"(sum *= i)  at (28,3:10) 0x2f513f0" -> "for no_cond at (22:29,2:2) 0x2f51430"
"void (int &, int) increment(int & value, int steps)  at (8:10,1:1) 0x2f0c700" -> "(value += steps)  at (9,2:11) 0x2f0c7b8"
"(value += steps)  at (9,2:11) 0x2f0c7b8"
"int globVar  = 0  at (2,1:15) 0x2f0c460"
}