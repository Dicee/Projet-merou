digraph {
"static char [100]   at (0,23:23) 0x5cc420"
"int (int) self(int value)  at (12:14,1:1) 0x5cc860" -> "ReturnStmt(value)  at (13,5:12) 0x5cc900"
"ReturnStmt(value)  at (13,5:12) 0x5cc900"
"int (int, char **) main(int argc, char ** argv)  at (16:89,1:1) 0x5cca20" -> "int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,5:72) 0x5ccdf8"
"int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,5:72) 0x5ccdf8" -> "int len  = 14  at (18,5:17) 0x5cce70"
"int len  = 14  at (18,5:17) 0x5cce70" -> "int i , int j , int temp   at (19,5:19) 0x6109d0"
"int i , int j , int temp   at (19,5:19) 0x6109d0" -> "int sum  = 0  at (20,5:16) 0x610a40"
"int sum  = 0  at (20,5:16) 0x610a40" -> "(sum = increment(sum))  at (21,5:24) 0x610b38"
"(sum = increment(sum))  at (21,5:24) 0x610b38" -> "int i  = 0  at (22,10:19) 0x610bb0"
"int i  = 0  at (22,10:19) 0x610bb0" -> "for no_cond at (22:29,5:5) 0x610db0"
"for no_cond at (22:29,5:5) 0x610db0" -> "(sum += i)  at (23,9:16) 0x610c00"
"for no_cond at (22:29,5:5) 0x610db0" -> "if (sum > 100) at (30:36,5:31) 0x6110a0"
"(sum += i)  at (23,9:16) 0x610c00" -> "if (i == 8) at (24:25,9:13) 0x610c88"
"if (i == 8) at (24:25,9:13) 0x610c88" -> "if (sum > 100) at (30:36,5:31) 0x6110a0"
"if (i == 8) at (24:25,9:13) 0x610c88" -> "if (i < 8) at (26:27,9:13) 0x610d10"
"if (sum > 100) at (30:36,5:31) 0x6110a0" -> "(sum = 100)  at (31,9:15) 0x610e70"
"if (sum > 100) at (30:36,5:31) 0x6110a0" -> "if (sum > 50) at (32:36,10:31) 0x611080"
"(sum = 100)  at (31,9:15) 0x610e70" -> "switch (sum / 10) at (38:46,5:5) 0x611120"
"switch (sum / 10) at (38:46,5:5) 0x611120" -> "2  at (42:43,5:15) 0x6111f8"
"switch (sum / 10) at (38:46,5:5) 0x611120" -> "(sum += 10)  at (45,9:16) 0x6112a0"
"switch (sum / 10) at (38:46,5:5) 0x611120" -> "1  at (39:40,5:15) 0x611160"
"2  at (42:43,5:15) 0x6111f8" -> "(sum = 30)  at (43,9:15) 0x611250"
"(sum = 30)  at (43,9:15) 0x611250" -> "(sum += 10)  at (45,9:16) 0x6112a0"
"(sum += 10)  at (45,9:16) 0x6112a0" -> "self(sum)  at (47,5:13) 0x611370"
"self(sum)  at (47,5:13) 0x611370" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:5) 0x611f50"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:5) 0x611f50" -> "for (sum > 0) at (52:66,9:13) 0x611f10"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:5) 0x611f50" -> "(sum = 10000)  at (50,9:15) 0x6115a0"
"for (sum > 0) at (52:66,9:13) 0x611f10" -> "switch sum at (69:83,5:5) 0x611fd8"
"for (sum > 0) at (52:66,9:13) 0x611f10" -> "switch sum at (53:66,13:13) 0x611698"
"switch sum at (69:83,5:5) 0x611fd8" -> "3  at (77:78,5:14) 0x612108"
"switch sum at (69:83,5:5) 0x611fd8" -> "2  at (75:76,5:9) 0x6120c0"
"switch sum at (69:83,5:5) 0x611fd8" -> "1  at (70:74,5:13) 0x612018"
"switch sum at (69:83,5:5) 0x611fd8" -> "4  at (79:81,5:12) 0x612158"
"switch sum at (69:83,5:5) 0x611fd8" -> "sum++  at (81,9:12) 0x612190"
"3  at (77:78,5:14) 0x612108" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:5) 0x611f50"
"2  at (75:76,5:9) 0x6120c0" -> "int [100][100][100] array   at (85,5:29) 0x612370"
"int [100][100][100] array   at (85,5:29) 0x612370" -> "(sum = array[10][10][10])  at (86,5:27) 0x6124c8"
"(sum = array[10][10][10])  at (86,5:27) 0x6124c8" -> "ReturnStmt(0)  at (88,5:12) 0x612500"
"ReturnStmt(0)  at (88,5:12) 0x612500"
"1  at (70:74,5:13) 0x612018" -> "if 1 at (71:74,9:13) 0x612080"
"if 1 at (71:74,9:13) 0x612080" -> "int [100][100][100] array   at (85,5:29) 0x612370"
"if 1 at (71:74,9:13) 0x612080" -> "2  at (75:76,5:9) 0x6120c0"
"4  at (79:81,5:12) 0x612158" -> "sum++  at (81,9:12) 0x612190"
"sum++  at (81,9:12) 0x612190" -> "sum--  at (82,9:12) 0x6121d8"
"sum--  at (82,9:12) 0x6121d8" -> "int [100][100][100] array   at (85,5:29) 0x612370"
"switch sum at (53:66,13:13) 0x611698" -> "2  at (55:56,13:17) 0x611718"
"switch sum at (53:66,13:13) 0x611698" -> "3  at (57:58,13:20) 0x611760"
"switch sum at (53:66,13:13) 0x611698" -> "1  at (54:56,13:17) 0x6116d8"
"2  at (55:56,13:17) 0x611718" -> "(sum += 2)  at (52,25:32) 0x611650"
"(sum += 2)  at (52,25:32) 0x611650" -> "for (sum > 0) at (52:66,9:13) 0x611f10"
"3  at (57:58,13:20) 0x611760" -> "sum++  at (58,17:20) 0x611798"
"sum++  at (58,17:20) 0x611798" -> "(i = 0)  at (59,22:26) 0x6117e8"
"(i = 0)  at (59,22:26) 0x6117e8" -> "for (i < (len - 1)) at (59:65,17:25) 0x611ec8"
"for (i < (len - 1)) at (59:65,17:25) 0x611ec8" -> "(j = 0)  at (60,26:30) 0x611908"
"for (i < (len - 1)) at (59:65,17:25) 0x611ec8" -> "(sum += 2)  at (52,25:32) 0x611650"
"(j = 0)  at (60,26:30) 0x611908" -> "for (j < ((len - 1) - i)) at (60:65,21:25) 0x611ea0"
"for (j < ((len - 1) - i)) at (60:65,21:25) 0x611ea0" -> "i++  at (59,42:43) 0x6118b8"
"for (j < ((len - 1) - i)) at (60:65,21:25) 0x611ea0" -> "if (arr[j] > arr[(j + 1)]) at (61:65,25:25) 0x611e80"
"i++  at (59,42:43) 0x6118b8" -> "for (i < (len - 1)) at (59:65,17:25) 0x611ec8"
"if (arr[j] > arr[(j + 1)]) at (61:65,25:25) 0x611e80" -> "j++  at (60,50:51) 0x611a30"
"if (arr[j] > arr[(j + 1)]) at (61:65,25:25) 0x611e80" -> "(temp = arr[j])  at (62,29:41) 0x611c38"
"j++  at (60,50:51) 0x611a30" -> "for (j < ((len - 1) - i)) at (60:65,21:25) 0x611ea0"
"(temp = arr[j])  at (62,29:41) 0x611c38" -> "(arr[j] = arr[(j + 1)])  at (63,29:47) 0x611d68"
"(arr[j] = arr[(j + 1)])  at (63,29:47) 0x611d68" -> "(arr[(j + 1)] = temp)  at (64,29:42) 0x611e48"
"(arr[(j + 1)] = temp)  at (64,29:42) 0x611e48" -> "j++  at (60,50:51) 0x611a30"
"1  at (54:56,13:17) 0x6116d8" -> "2  at (55:56,13:17) 0x611718"
"(sum = 10000)  at (50,9:15) 0x6115a0" -> "switch sum at (69:83,5:5) 0x611fd8"
"1  at (39:40,5:15) 0x611160" -> "(sum = 20)  at (40,9:15) 0x6111b8"
"(sum = 20)  at (40,9:15) 0x6111b8" -> "self(sum)  at (47,5:13) 0x611370"
"if (sum > 50) at (32:36,10:31) 0x611080" -> "(sum = 50)  at (33,9:15) 0x610f20"
"if (sum > 50) at (32:36,10:31) 0x611080" -> "((sum -= 5) , (sum = (sum + 10)))  at (36,9:31) 0x611068"
"(sum = 50)  at (33,9:15) 0x610f20" -> "ReturnStmt(1)  at (34,9:16) 0x610f58"
"ReturnStmt(1)  at (34,9:16) 0x610f58"
"((sum -= 5) , (sum = (sum + 10)))  at (36,9:31) 0x611068" -> "switch (sum / 10) at (38:46,5:5) 0x611120"
"if (i < 8) at (26:27,9:13) 0x610d10" -> "(sum *= i)  at (28,9:16) 0x610d70"
"if (i < 8) at (26:27,9:13) 0x610d10" -> "for no_cond at (22:29,5:5) 0x610db0"
"(sum *= i)  at (28,9:16) 0x610d70" -> "for no_cond at (22:29,5:5) 0x610db0"
"void (int &, int) increment(int & value, int steps)  at (8:10,1:1) 0x5cc700" -> "(value += steps)  at (9,5:14) 0x5cc7b8"
"(value += steps)  at (9,5:14) 0x5cc7b8"
"int globVar  = 0  at (2,1:15) 0x5cc460"
}