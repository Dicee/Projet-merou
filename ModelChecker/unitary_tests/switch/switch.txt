TranslationUnitDecl 0x17c0a0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x17c390 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
`-FunctionDecl 0x17c400 <unitary_tests\switch\switch.cpp:1:1, line:15:1> line:1:5 main 'int (void)'
  `-CompoundStmt 0x17c9a0 <line:2:1, line:15:1>
    |-DeclStmt 0x17c4f0 <line:3:5, col:14>
    | `-VarDecl 0x17c4a0 <col:5, col:13> col:9 used j 'int' cinit
    |   `-IntegerLiteral 0x17c4d0 <col:13> 'int' 0
    |-DeclStmt 0x17c560 <line:4:5, col:14>
    | `-VarDecl 0x17c510 <col:5, col:13> col:9 used i 'int' cinit
    |   `-IntegerLiteral 0x17c540 <col:13> 'int' 2
    |-SwitchStmt 0x17c598 <line:5:5, line:13:5>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x17c588 <line:5:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x17c570 <col:13> 'int' lvalue Var 0x17c510 'i' 'int'
    | `-CompoundStmt 0x17c900 <col:16, line:13:5>
    |   |-CaseStmt 0x17c5d8 <line:6:9, col:18>
    |   | |-IntegerLiteral 0x17c5b8 <col:14> 'int' 1
    |   | |-<<<NULL>>>
    |   | `-UnaryOperator 0x17c610 <col:17, col:18> 'int' postfix '++'
    |   |   `-DeclRefExpr 0x17c5f8 <col:17> 'int' lvalue Var 0x17c4a0 'j' 'int'
    |   |-CaseStmt 0x17c648 <line:7:9, col:20>
    |   | |-IntegerLiteral 0x17c628 <col:14> 'int' 2
    |   | |-<<<NULL>>>
    |   | `-CompoundAssignOperator 0x17c6a0 <col:17, col:20> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |   |-DeclRefExpr 0x17c668 <col:17> 'int' lvalue Var 0x17c4a0 'j' 'int'
    |   |   `-IntegerLiteral 0x17c680 <col:20> 'int' 2
    |   |-CaseStmt 0x17c6e0 <line:8:9, col:20>
    |   | |-IntegerLiteral 0x17c6c0 <col:14> 'int' 3
    |   | |-<<<NULL>>>
    |   | `-CompoundAssignOperator 0x17c738 <col:17, col:20> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |   |-DeclRefExpr 0x17c700 <col:17> 'int' lvalue Var 0x17c4a0 'j' 'int'
    |   |   `-IntegerLiteral 0x17c718 <col:20> 'int' 3
    |   |-UnaryOperator 0x17c770 <col:23, col:24> 'int' postfix '++'
    |   | `-DeclRefExpr 0x17c758 <col:23> 'int' lvalue Var 0x17c510 'i' 'int'
    |   |-CaseStmt 0x17c7a8 <line:9:9, line:10:20>
    |   | |-IntegerLiteral 0x17c788 <line:9:14> 'int' 4
    |   | |-<<<NULL>>>
    |   | `-CaseStmt 0x17c7e8 <line:10:9, col:20>
    |   |   |-IntegerLiteral 0x17c7c8 <col:14> 'int' 5
    |   |   |-<<<NULL>>>
    |   |   `-CompoundAssignOperator 0x17c840 <col:17, col:20> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |     |-DeclRefExpr 0x17c808 <col:17> 'int' lvalue Var 0x17c4a0 'j' 'int'
    |   |     `-IntegerLiteral 0x17c820 <col:20> 'int' 10
    |   |-BreakStmt 0x17c860 <line:11:17>
    |   `-CaseStmt 0x17c888 <line:12:9, col:20>
    |     |-IntegerLiteral 0x17c868 <col:14> 'int' 6
    |     |-<<<NULL>>>
    |     `-CompoundAssignOperator 0x17c8e0 <col:17, col:20> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |-DeclRefExpr 0x17c8a8 <col:17> 'int' lvalue Var 0x17c4a0 'j' 'int'
    |       `-IntegerLiteral 0x17c8c0 <col:20> 'int' 1
    `-DeclStmt 0x17c990 <line:14:5, col:14>
      `-VarDecl 0x17c940 <col:5, col:13> col:9 k 'int' cinit
        `-IntegerLiteral 0x17c970 <col:13> 'int' 7
