TranslationUnitDecl 0x1028254d0 <<invalid sloc>>
|-TypedefDecl 0x102825a10 <<invalid sloc>> __int128_t '__int128'
|-TypedefDecl 0x102825a70 <<invalid sloc>> __uint128_t 'unsigned __int128'
|-TypedefDecl 0x102825e30 <<invalid sloc>> __builtin_va_list '__va_list_tag [1]'
`-FunctionDecl 0x102825ed0 <unitary_tests/switch/switch_in_loop.cpp:1:1, line:17:1> main 'int (void)'
  `-CompoundStmt 0x103000650 <line:2:1, line:17:1>
    |-DeclStmt 0x102826058 <line:3:5, col:14>
    | `-VarDecl 0x102825fe0 <col:5, col:13> j 'int'
    |   `-IntegerLiteral 0x102826038 <col:13> 'int' 0
    |-WhileStmt 0x103000580 <line:4:5, line:15:5>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1028260d0 <line:4:12, col:16> '_Bool' '>'
    | | |-ImplicitCastExpr 0x1028260b8 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x102826070 <col:12> 'int' lvalue Var 0x102825fe0 'j' 'int'
    | | `-IntegerLiteral 0x102826098 <col:16> 'int' 5
    | `-CompoundStmt 0x103000558 <col:19, line:15:5>
    |   |-DeclStmt 0x102826188 <line:5:3, col:12>
    |   | `-VarDecl 0x102826110 <col:3, col:11> i 'int'
    |   |   `-IntegerLiteral 0x102826168 <col:11> 'int' 2
    |   `-SwitchStmt 0x103000010 <line:6:3, line:14:3>
    |     |-<<<NULL>>>
    |     |-ImplicitCastExpr 0x1028261c8 <line:6:11> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1028261a0 <col:11> 'int' lvalue Var 0x102826110 'i' 'int'
    |     `-CompoundStmt 0x103000500 <col:14, line:14:3>
    |       |-CaseStmt 0x103000060 <line:7:4, col:13>
    |       | |-IntegerLiteral 0x103000040 <col:9> 'int' 1
    |       | |-<<<NULL>>>
    |       | `-UnaryOperator 0x1030000c0 <col:12, col:13> 'int' postfix '++'
    |       |   `-DeclRefExpr 0x103000098 <col:12> 'int' lvalue Var 0x102825fe0 'j' 'int'
    |       |-CaseStmt 0x103000100 <line:8:4, col:15>
    |       | |-IntegerLiteral 0x1030000e0 <col:9> 'int' 2
    |       | |-<<<NULL>>>
    |       | `-CompoundAssignOperator 0x103000180 <col:12, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |   |-DeclRefExpr 0x103000138 <col:12> 'int' lvalue Var 0x102825fe0 'j' 'int'
    |       |   `-IntegerLiteral 0x103000160 <col:15> 'int' 2
    |       |-CaseStmt 0x1030001d8 <line:9:4, col:15>
    |       | |-IntegerLiteral 0x1030001b8 <col:9> 'int' 3
    |       | |-<<<NULL>>>
    |       | `-CompoundAssignOperator 0x103000258 <col:12, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |   |-DeclRefExpr 0x103000210 <col:12> 'int' lvalue Var 0x102825fe0 'j' 'int'
    |       |   `-IntegerLiteral 0x103000238 <col:15> 'int' 3
    |       |-UnaryOperator 0x1030002b8 <col:18, col:19> 'int' postfix '++'
    |       | `-DeclRefExpr 0x103000290 <col:18> 'int' lvalue Var 0x102826110 'i' 'int'
    |       |-BreakStmt 0x1030002d8 <col:23>
    |       |-CaseStmt 0x103000308 <line:10:4, line:11:15>
    |       | |-IntegerLiteral 0x1030002e8 <line:10:9> 'int' 4
    |       | |-<<<NULL>>>
    |       | `-CaseStmt 0x103000360 <line:11:4, col:15>
    |       |   |-IntegerLiteral 0x103000340 <col:9> 'int' 5
    |       |   |-<<<NULL>>>
    |       |   `-CompoundAssignOperator 0x1030003e0 <col:12, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |     |-DeclRefExpr 0x103000398 <col:12> 'int' lvalue Var 0x102825fe0 'j' 'int'
    |       |     `-IntegerLiteral 0x1030003c0 <col:15> 'int' 10
    |       |-BreakStmt 0x103000418 <line:12:6>
    |       `-CaseStmt 0x103000448 <line:13:4, col:15>
    |         |-IntegerLiteral 0x103000428 <col:9> 'int' 6
    |         |-<<<NULL>>>
    |         `-CompoundAssignOperator 0x1030004c8 <col:12, col:15> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |           |-DeclRefExpr 0x103000480 <col:12> 'int' lvalue Var 0x102825fe0 'j' 'int'
    |           `-IntegerLiteral 0x1030004a8 <col:15> 'int' 1
    `-DeclStmt 0x103000638 <line:16:5, col:14>
      `-VarDecl 0x1030005c0 <col:5, col:13> k 'int'
        `-IntegerLiteral 0x103000618 <col:13> 'int' 7
