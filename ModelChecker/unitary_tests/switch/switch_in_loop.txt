TranslationUnitDecl 0x241b980 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x241bc70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
`-FunctionDecl 0x241bce0 <unitary_tests\switch\switch_in_loop.cpp:1:1, line:17:1> line:1:5 main 'int (void)'
  `-CompoundStmt 0x241c320 <line:2:1, line:17:1>
    |-DeclStmt 0x241bdd0 <line:3:5, col:14>
    | `-VarDecl 0x241bd80 <col:5, col:13> col:9 used j 'int' cinit
    |   `-IntegerLiteral 0x241bdb0 <col:13> 'int' 0
    |-WhileStmt 0x241c290 <line:4:5, line:15:5>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x241be28 <line:4:12, col:16> '_Bool' '>'
    | | |-ImplicitCastExpr 0x241be18 <col:12> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x241bde0 <col:12> 'int' lvalue Var 0x241bd80 'j' 'int'
    | | `-IntegerLiteral 0x241bdf8 <col:16> 'int' 5
    | `-CompoundStmt 0x241c278 <col:19, line:15:5>
    |   |-DeclStmt 0x241bea0 <line:5:3, col:12>
    |   | `-VarDecl 0x241be50 <col:3, col:11> col:7 used i 'int' cinit
    |   |   `-IntegerLiteral 0x241be80 <col:11> 'int' 2
    |   `-SwitchStmt 0x241bed8 <line:6:3, line:14:3>
    |     |-<<<NULL>>>
    |     |-ImplicitCastExpr 0x241bec8 <line:6:11> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x241beb0 <col:11> 'int' lvalue Var 0x241be50 'i' 'int'
    |     `-CompoundStmt 0x241c248 <col:14, line:14:3>
    |       |-CaseStmt 0x241bf18 <line:7:4, col:13>
    |       | |-IntegerLiteral 0x241bef8 <col:9> 'int' 1
    |       | |-<<<NULL>>>
    |       | `-UnaryOperator 0x241bf50 <col:12, col:13> 'int' postfix '++'
    |       |   `-DeclRefExpr 0x241bf38 <col:12> 'int' lvalue Var 0x241bd80 'j' 'int'
    |       |-CaseStmt 0x241bf88 <line:8:4, col:15>
    |       | |-IntegerLiteral 0x241bf68 <col:9> 'int' 2
    |       | |-<<<NULL>>>
    |       | `-CompoundAssignOperator 0x241bfe0 <col:12, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |   |-DeclRefExpr 0x241bfa8 <col:12> 'int' lvalue Var 0x241bd80 'j' 'int'
    |       |   `-IntegerLiteral 0x241bfc0 <col:15> 'int' 2
    |       |-CaseStmt 0x241c020 <line:9:4, col:15>
    |       | |-IntegerLiteral 0x241c000 <col:9> 'int' 3
    |       | |-<<<NULL>>>
    |       | `-CompoundAssignOperator 0x241c078 <col:12, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |   |-DeclRefExpr 0x241c040 <col:12> 'int' lvalue Var 0x241bd80 'j' 'int'
    |       |   `-IntegerLiteral 0x241c058 <col:15> 'int' 3
    |       |-UnaryOperator 0x241c0b0 <col:18, col:19> 'int' postfix '++'
    |       | `-DeclRefExpr 0x241c098 <col:18> 'int' lvalue Var 0x241be50 'i' 'int'
    |       |-BreakStmt 0x241c0c8 <col:23>
    |       |-CaseStmt 0x241c0f0 <line:10:4, line:11:15>
    |       | |-IntegerLiteral 0x241c0d0 <line:10:9> 'int' 4
    |       | |-<<<NULL>>>
    |       | `-CaseStmt 0x241c130 <line:11:4, col:15>
    |       |   |-IntegerLiteral 0x241c110 <col:9> 'int' 5
    |       |   |-<<<NULL>>>
    |       |   `-CompoundAssignOperator 0x241c188 <col:12, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |       |     |-DeclRefExpr 0x241c150 <col:12> 'int' lvalue Var 0x241bd80 'j' 'int'
    |       |     `-IntegerLiteral 0x241c168 <col:15> 'int' 10
    |       |-BreakStmt 0x241c1a8 <line:12:6>
    |       `-CaseStmt 0x241c1d0 <line:13:4, col:15>
    |         |-IntegerLiteral 0x241c1b0 <col:9> 'int' 6
    |         |-<<<NULL>>>
    |         `-CompoundAssignOperator 0x241c228 <col:12, col:15> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
    |           |-DeclRefExpr 0x241c1f0 <col:12> 'int' lvalue Var 0x241bd80 'j' 'int'
    |           `-IntegerLiteral 0x241c208 <col:15> 'int' 1
    `-DeclStmt 0x241c310 <line:16:5, col:14>
      `-VarDecl 0x241c2c0 <col:5, col:13> col:9 k 'int' cinit
        `-IntegerLiteral 0x241c2f0 <col:13> 'int' 7
