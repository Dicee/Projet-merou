TranslationUnitDecl 0xd4c0c0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xd4c3b0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
|-FunctionDecl 0xd4c420 <unitary_tests\for\for_x_x_x_-.cpp:1:1, line:3:1> line:1:5 used f 'int (void)'
| `-CompoundStmt 0xd4c4c0 <col:9, line:3:1>
|   `-ReturnStmt 0xd4c4b0 <line:2:2, col:9>
|     `-IntegerLiteral 0xd4c490 <col:9> 'int' 3
`-FunctionDecl 0xd4c5d0 <line:5:1, line:9:1> line:5:5 main 'int (int, char **)'
  |-ParmVarDecl 0xd4c4f0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0xd4c550 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0xd4c928 <col:33, line:9:1>
    |-DeclStmt 0xd4c760 <line:6:2, col:17>
    | `-VarDecl 0xd4c660 <col:2, col:16> col:6 j 'int' cinit
    |   `-BinaryOperator 0xd4c748 <col:10, col:16> 'int' '+'
    |     |-IntegerLiteral 0xd4c690 <col:10> 'int' 5
    |     `-CallExpr 0xd4c728 <col:14, col:16> 'int'
    |       `-ImplicitCastExpr 0xd4c718 <col:14> 'int (*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0xd4c6e8 <col:14> 'int (void)' lvalue Function 0xd4c420 'f' 'int (void)'
    |-ForStmt 0xd4c880 <line:7:2, col:27>
    | |-DeclStmt 0xd4c7d0 <col:7, col:15>
    | | `-VarDecl 0xd4c780 <col:7, col:13> col:11 used i 'int' cinit
    | |   `-IntegerLiteral 0xd4c7b0 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0xd4c828 <col:17, col:19> '_Bool' '<'
    | | |-ImplicitCastExpr 0xd4c818 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xd4c7e0 <col:17> 'int' lvalue Var 0xd4c780 'i' 'int'
    | | `-IntegerLiteral 0xd4c7f8 <col:19> 'int' 5
    | |-UnaryOperator 0xd4c858 <col:23, col:24> 'int' postfix '++'
    | | `-DeclRefExpr 0xd4c840 <col:23> 'int' lvalue Var 0xd4c780 'i' 'int'
    | `-NullStmt 0xd4c870 <col:27>
    `-CallExpr 0xd4c908 <line:8:2, col:4> 'int'
      `-ImplicitCastExpr 0xd4c8f8 <col:2> 'int (*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0xd4c8e0 <col:2> 'int (void)' lvalue Function 0xd4c420 'f' 'int (void)'
