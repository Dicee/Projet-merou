TranslationUnitDecl 0x2c41170 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2c416b0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
|-TypedefDecl 0x2c41710 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
|-TypedefDecl 0x2c41ad0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
|-FunctionDecl 0x2c41b70 <ModelChecker/unitary_tests/for/for_-_-_-_-.cpp:1:1, line:3:1> line:1:5 used f 'int (void)'
| `-CompoundStmt 0x2c41c50 <col:9, line:3:1>
|   `-ReturnStmt 0x2c41c30 <line:2:5, col:12>
|     `-IntegerLiteral 0x2c41c10 <col:12> 'int' 3
`-FunctionDecl 0x2c7e9b0 <line:5:1, line:12:1> line:5:5 main 'int (int, char **)'
  |-ParmVarDecl 0x2c41c80 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x2c41d50 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x2c7efc0 <col:33, line:12:1>
    |-DeclStmt 0x2c7ec00 <line:6:5, col:20>
    | `-VarDecl 0x2c7ea70 <col:5, col:19> col:9 used j 'int' cinit
    |   `-BinaryOperator 0x2c7ebd8 <col:13, col:19> 'int' '+'
    |     |-IntegerLiteral 0x2c7eac8 <col:13> 'int' 5
    |     `-CallExpr 0x2c7ebb0 <col:17, col:19> 'int'
    |       `-ImplicitCastExpr 0x2c7eb98 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x2c7eb40 <col:17> 'int (void)' lvalue Function 0x2c41b70 'f' 'int (void)'
    |-IfStmt 0x2c7ecb0 <line:7:5, col:16>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x2c7ec78 <col:9, col:14> '_Bool' '=='
    | | |-ImplicitCastExpr 0x2c7ec60 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2c7ec18 <col:9> 'int' lvalue Var 0x2c7ea70 'j' 'int'
    | | `-IntegerLiteral 0x2c7ec40 <col:14> 'int' 6
    | |-NullStmt 0x2c7eca0 <col:16>
    | `-<<<NULL>>>
    |-ForStmt 0x2c7ecf0 <line:8:5, col:13>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | `-NullStmt 0x2c7ece0 <col:13>
    |-DeclStmt 0x2c7edb8 <line:9:5, col:15>
    | `-VarDecl 0x2c7ed40 <col:5, col:13> col:9 used z 'int' cinit
    |   `-IntegerLiteral 0x2c7ed98 <col:13> 'int' 22
    |-IfStmt 0x2c7eed0 <line:10:5, col:20>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x2c7ee98 <col:9, col:17> '_Bool' '=='
    | | |-ParenExpr 0x2c7ee58 <col:9, col:14> 'int'
    | | | `-BinaryOperator 0x2c7ee30 <col:10, col:12> 'int' '-'
    | | |   |-ImplicitCastExpr 0x2c7ee18 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x2c7edd0 <col:10> 'int' lvalue Var 0x2c7ed40 'z' 'int'
    | | |   `-IntegerLiteral 0x2c7edf8 <col:12> 'int' 20
    | | `-IntegerLiteral 0x2c7ee78 <col:17> 'int' 19
    | |-NullStmt 0x2c7eec0 <col:20>
    | `-<<<NULL>>>
    `-CallExpr 0x2c7ef98 <line:11:5, col:7> 'int'
      `-ImplicitCastExpr 0x2c7ef80 <col:5> 'int (*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x2c7ef58 <col:5> 'int (void)' lvalue Function 0x2c41b70 'f' 'int (void)'
