digraph {
"static char [100]   at (0,23:23) 0x103806300"
"int (int) self(int value)  at (12:14,1:1) 0x1030485a0" -> "ReturnStmt(value)  at (13,2:9) 0x103048688"
"ReturnStmt(value)  at (13,2:9) 0x103048688"
"int (int, char **) main(int argc, char **:char ** argv)  at (16:89,1:1) 0x103048930" -> "int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,2:69) 0x103048e68"
"int [14] arr  = { 22,34,3,32,82,55,89,50,37,5,64,35,9,70 }  at (17,2:69) 0x103048e68" -> "int len  = 14  at (18,2:14) 0x103048f08"
"int len  = 14  at (18,2:14) 0x103048f08" -> "int i , int j , int temp   at (19,2:16) 0x103049088"
"int i , int j , int temp   at (19,2:16) 0x103049088" -> "int sum  = 0  at (20,2:13) 0x103049128"
"int sum  = 0  at (20,2:13) 0x103049128" -> "(sum = increment(sum))  at (21,2:21) 0x1030496c8"
"(sum = increment(sum))  at (21,2:21) 0x1030496c8" -> "int i  = 0  at (22,7:16) 0x103049778"
"int i  = 0  at (22,7:16) 0x103049778" -> "for no_cond at (22:29,2:2) 0x103049a98"
"for no_cond at (22:29,2:2) 0x103049a98" -> "if (sum > 100) at (30:36,2:25) 0x103049ee0"
"for no_cond at (22:29,2:2) 0x103049a98" -> "(sum += i)  at (23,3:10) 0x1030497f8"
"if (sum > 100) at (30:36,2:25) 0x103049ee0" -> "(sum = 100)  at (31,3:9) 0x103049ba8"
"if (sum > 100) at (30:36,2:25) 0x103049ee0" -> "if (sum > 50) at (32:36,7:25) 0x103049eb0"
"(sum = 100)  at (31,3:9) 0x103049ba8" -> "switch (sum / 10) at (38:46,2:2) 0x103049f98"
"switch (sum / 10) at (38:46,2:2) 0x103049f98" -> "1  at (39:40,2:9) 0x103049fe8"
"switch (sum / 10) at (38:46,2:2) 0x103049f98" -> "(sum += 10)  at (45,3:10) 0x10304a1b0"
"switch (sum / 10) at (38:46,2:2) 0x103049f98" -> "2  at (42:43,2:9) 0x10304a0c0"
"1  at (39:40,2:9) 0x103049fe8" -> "(sum = 20)  at (40,3:9) 0x10304a068"
"(sum = 20)  at (40,3:9) 0x10304a068" -> "self(sum)  at (47,2:10) 0x10304a300"
"self(sum)  at (47,2:10) 0x10304a300" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0x10304b4b8"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0x10304b4b8" -> "for (sum > 0) at (52:66,3:4) 0x10304b458"
"if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0x10304b4b8" -> "(sum = 10000)  at (50,3:9) 0x10304a630"
"for (sum > 0) at (52:66,3:4) 0x10304b458" -> "switch sum at (53:66,4:4) 0x10304a7a0"
"for (sum > 0) at (52:66,3:4) 0x10304b458" -> "switch sum at (69:83,2:2) 0x10304b588"
"switch sum at (53:66,4:4) 0x10304a7a0" -> "3  at (57:58,4:8) 0x10304a8b0"
"switch sum at (53:66,4:4) 0x10304a7a0" -> "2  at (55:56,4:5) 0x10304a848"
"switch sum at (53:66,4:4) 0x10304a7a0" -> "1  at (54:56,4:5) 0x10304a7f0"
"3  at (57:58,4:8) 0x10304a8b0" -> "sum++  at (58,5:8) 0x10304a910"
"sum++  at (58,5:8) 0x10304a910" -> "(i = 0)  at (59,10:14) 0x10304a978"
"(i = 0)  at (59,10:14) 0x10304a978" -> "for (i < (len - 1)) at (59:65,5:7) 0x10304b3e8"
"for (i < (len - 1)) at (59:65,5:7) 0x10304b3e8" -> "(j = 0)  at (60,11:15) 0x10304ab20"
"for (i < (len - 1)) at (59:65,5:7) 0x10304b3e8" -> "(sum += 2)  at (52,19:26) 0x10304a728"
"(j = 0)  at (60,11:15) 0x10304ab20" -> "for (j < ((len - 1) - i)) at (60:65,6:7) 0x10304b3a8"
"for (j < ((len - 1) - i)) at (60:65,6:7) 0x10304b3a8" -> "i++  at (59,30:31) 0x10304aab8"
"for (j < ((len - 1) - i)) at (60:65,6:7) 0x10304b3a8" -> "if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x10304b378"
"i++  at (59,30:31) 0x10304aab8" -> "for (i < (len - 1)) at (59:65,5:7) 0x10304b3e8"
"if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x10304b378" -> "j++  at (60,35:36) 0x10304acc8"
"if (arr[j] > arr[(j + 1)]) at (61:65,7:7) 0x10304b378" -> "(temp = arr[j])  at (62,8:20) 0x10304aff0"
"j++  at (60,35:36) 0x10304acc8" -> "for (j < ((len - 1) - i)) at (60:65,6:7) 0x10304b3a8"
"(temp = arr[j])  at (62,8:20) 0x10304aff0" -> "(arr[j] = arr[(j + 1)])  at (63,8:26) 0x10304b1c8"
"(arr[j] = arr[(j + 1)])  at (63,8:26) 0x10304b1c8" -> "(arr[(j + 1)] = temp)  at (64,8:21) 0x10304b320"
"(arr[(j + 1)] = temp)  at (64,8:21) 0x10304b320" -> "j++  at (60,35:36) 0x10304acc8"
"(sum += 2)  at (52,19:26) 0x10304a728" -> "for (sum > 0) at (52:66,3:4) 0x10304b458"
"2  at (55:56,4:5) 0x10304a848" -> "(sum += 2)  at (52,19:26) 0x10304a728"
"1  at (54:56,4:5) 0x10304a7f0" -> "2  at (55:56,4:5) 0x10304a848"
"switch sum at (69:83,2:2) 0x10304b588" -> "2  at (75:76,2:3) 0x10304b6f0"
"switch sum at (69:83,2:2) 0x10304b588" -> "4  at (79:81,2:6) 0x10304b7c8"
"switch sum at (69:83,2:2) 0x10304b588" -> "3  at (77:78,2:8) 0x10304b758"
"switch sum at (69:83,2:2) 0x10304b588" -> "sum++  at (81,3:6) 0x10304b828"
"switch sum at (69:83,2:2) 0x10304b588" -> "1  at (70:74,2:4) 0x10304b610"
"2  at (75:76,2:3) 0x10304b6f0" -> "int [100][100][100] array   at (85,2:26) 0x10304baa8"
"int [100][100][100] array   at (85,2:26) 0x10304baa8" -> "(sum = array[10][10][10])  at (86,2:24) 0x10304bca0"
"(sum = array[10][10][10])  at (86,2:24) 0x10304bca0" -> "ReturnStmt(0)  at (88,2:9) 0x10304bce8"
"ReturnStmt(0)  at (88,2:9) 0x10304bce8"
"4  at (79:81,2:6) 0x10304b7c8" -> "sum++  at (81,3:6) 0x10304b828"
"sum++  at (81,3:6) 0x10304b828" -> "sum--  at (82,3:6) 0x10304b890"
"sum--  at (82,3:6) 0x10304b890" -> "int [100][100][100] array   at (85,2:26) 0x10304baa8"
"3  at (77:78,2:8) 0x10304b758" -> "if ((sum == 19) ? ((sum = 20) , (sum -= 10)) : (sum = 30)) at (49:67,8:2) 0x10304b4b8"
"1  at (70:74,2:4) 0x10304b610" -> "if 1 at (71:74,3:4) 0x10304b6a0"
"if 1 at (71:74,3:4) 0x10304b6a0" -> "2  at (75:76,2:3) 0x10304b6f0"
"if 1 at (71:74,3:4) 0x10304b6a0" -> "int [100][100][100] array   at (85,2:26) 0x10304baa8"
"(sum = 10000)  at (50,3:9) 0x10304a630" -> "switch sum at (69:83,2:2) 0x10304b588"
"(sum += 10)  at (45,3:10) 0x10304a1b0" -> "self(sum)  at (47,2:10) 0x10304a300"
"2  at (42:43,2:9) 0x10304a0c0" -> "(sum = 30)  at (43,3:9) 0x10304a140"
"(sum = 30)  at (43,3:9) 0x10304a140" -> "(sum += 10)  at (45,3:10) 0x10304a1b0"
"if (sum > 50) at (32:36,7:25) 0x103049eb0" -> "((sum -= 5) , (sum = (sum + 10)))  at (36,3:25) 0x103049e88"
"if (sum > 50) at (32:36,7:25) 0x103049eb0" -> "(sum = 50)  at (33,3:9) 0x103049ca0"
"((sum -= 5) , (sum = (sum + 10)))  at (36,3:25) 0x103049e88" -> "switch (sum / 10) at (38:46,2:2) 0x103049f98"
"(sum = 50)  at (33,3:9) 0x103049ca0" -> "ReturnStmt(1)  at (34,3:10) 0x103049ce8"
"ReturnStmt(1)  at (34,3:10) 0x103049ce8"
"(sum += i)  at (23,3:10) 0x1030497f8" -> "if (i == 8) at (24:25,3:4) 0x1030498c8"
"if (i == 8) at (24:25,3:4) 0x1030498c8" -> "if (sum > 100) at (30:36,2:25) 0x103049ee0"
"if (i == 8) at (24:25,3:4) 0x1030498c8" -> "if (i < 8) at (26:27,3:4) 0x103049990"
"if (i < 8) at (26:27,3:4) 0x103049990" -> "for no_cond at (22:29,2:2) 0x103049a98"
"if (i < 8) at (26:27,3:4) 0x103049990" -> "(sum *= i)  at (28,3:10) 0x103049a28"
"(sum *= i)  at (28,3:10) 0x103049a28" -> "for no_cond at (22:29,2:2) 0x103049a98"
"void (int &, int) increment(int & value, int steps)  at (8:10,1:1) 0x1030483a0" -> "(value += steps)  at (9,2:11) 0x1030484b8"
"(value += steps)  at (9,2:11) 0x1030484b8"
"int globVar  = 0  at (2,1:15) 0x103806370"
}