TranslationUnitDecl 0x2b44170 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2b446b0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
|-TypedefDecl 0x2b44710 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
|-TypedefDecl 0x2b44ad0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
|-FunctionDecl 0x2b44b70 <ModelChecker/unitary_tests/for/for_x_x_x_-.cpp:1:1, line:3:1> line:1:5 used f 'int (void)'
| `-CompoundStmt 0x2b44c50 <col:9, line:3:1>
|   `-ReturnStmt 0x2b44c30 <line:2:5, col:12>
|     `-IntegerLiteral 0x2b44c10 <col:12> 'int' 3
`-FunctionDecl 0x2b81990 <line:5:1, line:9:1> line:5:5 main 'int (int, char **)'
  |-ParmVarDecl 0x2b44c80 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x2b44d50 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x2b81e80 <col:33, line:9:1>
    |-DeclStmt 0x2b81be0 <line:6:5, col:20>
    | `-VarDecl 0x2b81a50 <col:5, col:19> col:9 j 'int' cinit
    |   `-BinaryOperator 0x2b81bb8 <col:13, col:19> 'int' '+'
    |     |-IntegerLiteral 0x2b81aa8 <col:13> 'int' 5
    |     `-CallExpr 0x2b81b90 <col:17, col:19> 'int'
    |       `-ImplicitCastExpr 0x2b81b78 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x2b81b20 <col:17> 'int (void)' lvalue Function 0x2b44b70 'f' 'int (void)'
    |-ForStmt 0x2b81d80 <line:7:5, col:30>
    | |-DeclStmt 0x2b81c88 <col:10, col:18>
    | | `-VarDecl 0x2b81c10 <col:10, col:16> col:14 used i 'int' cinit
    | |   `-IntegerLiteral 0x2b81c68 <col:16> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x2b81d00 <col:20, col:22> '_Bool' '<'
    | | |-ImplicitCastExpr 0x2b81ce8 <col:20> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2b81ca0 <col:20> 'int' lvalue Var 0x2b81c10 'i' 'int'
    | | `-IntegerLiteral 0x2b81cc8 <col:22> 'int' 5
    | |-UnaryOperator 0x2b81d50 <col:26, col:27> 'int' postfix '++'
    | | `-DeclRefExpr 0x2b81d28 <col:26> 'int' lvalue Var 0x2b81c10 'i' 'int'
    | `-NullStmt 0x2b81d70 <col:30>
    `-CallExpr 0x2b81e58 <line:8:5, col:7> 'int'
      `-ImplicitCastExpr 0x2b81e40 <col:5> 'int (*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x2b81e18 <col:5> 'int (void)' lvalue Function 0x2b44b70 'f' 'int (void)'
