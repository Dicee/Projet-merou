TranslationUnitDecl 0x2f6f080 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2f6f370 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
|-FunctionDecl 0x2f6f3e0 <ModelChecker\unitary_tests\ast\for\for_-_-_-_-.cpp:1:1, line:3:1> line:1:5 used f 'int (void)'
| `-CompoundStmt 0x2f6f480 <col:9, line:3:1>
|   `-ReturnStmt 0x2f6f470 <line:2:5, col:12>
|     `-IntegerLiteral 0x2f6f450 <col:12> 'int' 3
`-FunctionDecl 0x2f6f590 <line:5:1, line:12:1> line:5:5 main 'int (int, char **)'
  |-ParmVarDecl 0x2f6f4b0 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x2f6f510 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x2f6f9d0 <col:33, line:12:1>
    |-DeclStmt 0x2f6f720 <line:6:5, col:20>
    | `-VarDecl 0x2f6f620 <col:5, col:19> col:9 used j 'int' cinit
    |   `-BinaryOperator 0x2f6f708 <col:13, col:19> 'int' '+'
    |     |-IntegerLiteral 0x2f6f650 <col:13> 'int' 5
    |     `-CallExpr 0x2f6f6e8 <col:17, col:19> 'int'
    |       `-ImplicitCastExpr 0x2f6f6d8 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
    |         `-DeclRefExpr 0x2f6f6a8 <col:17> 'int (void)' lvalue Function 0x2f6f3e0 'f' 'int (void)'
    |-IfStmt 0x2f6f7a0 <line:7:5, col:16>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x2f6f778 <col:9, col:14> '_Bool' '=='
    | | |-ImplicitCastExpr 0x2f6f768 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2f6f730 <col:9> 'int' lvalue Var 0x2f6f620 'j' 'int'
    | | `-IntegerLiteral 0x2f6f748 <col:14> 'int' 6
    | |-NullStmt 0x2f6f790 <col:16>
    | `-<<<NULL>>>
    |-ForStmt 0x2f6f7d0 <line:8:5, col:13>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | |-<<<NULL>>>
    | `-NullStmt 0x2f6f7c0 <col:13>
    |-DeclStmt 0x2f6f860 <line:9:5, col:15>
    | `-VarDecl 0x2f6f810 <col:5, col:13> col:9 used z 'int' cinit
    |   `-IntegerLiteral 0x2f6f840 <col:13> 'int' 22
    |-IfStmt 0x2f6f930 <line:10:5, col:20>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x2f6f908 <col:9, col:17> '_Bool' '=='
    | | |-ParenExpr 0x2f6f8d0 <col:9, col:14> 'int'
    | | | `-BinaryOperator 0x2f6f8b8 <col:10, col:12> 'int' '-'
    | | |   |-ImplicitCastExpr 0x2f6f8a8 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x2f6f870 <col:10> 'int' lvalue Var 0x2f6f810 'z' 'int'
    | | |   `-IntegerLiteral 0x2f6f888 <col:12> 'int' 20
    | | `-IntegerLiteral 0x2f6f8e8 <col:17> 'int' 19
    | |-NullStmt 0x2f6f920 <col:20>
    | `-<<<NULL>>>
    `-CallExpr 0x2f6f9b0 <line:11:5, col:7> 'int'
      `-ImplicitCastExpr 0x2f6f9a0 <col:5> 'int (*)(void)' <FunctionToPointerDecay>
        `-DeclRefExpr 0x2f6f988 <col:5> 'int (void)' lvalue Function 0x2f6f3e0 'f' 'int (void)'
