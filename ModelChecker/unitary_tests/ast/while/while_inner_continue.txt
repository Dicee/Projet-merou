TranslationUnitDecl 0xcfc050 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xcfc340 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
`-FunctionDecl 0xcfc3b0 <unitary_tests\while\while_inner_continue.cpp:1:1, line:13:1> line:1:5 main 'int (void)'
  `-CompoundStmt 0xcfc810 <col:12, line:13:1>
    |-DeclStmt 0xcfc4a0 <line:2:2, col:11>
    | `-VarDecl 0xcfc450 <col:2, col:10> col:6 used a 'int' cinit
    |   `-IntegerLiteral 0xcfc480 <col:10> 'int' 5
    |-WhileStmt 0xcfc788 <line:3:2, line:11:2>
    | |-<<<NULL>>>
    | |-BinaryOperator 0xcfc4f8 <line:3:9, col:13> '_Bool' '>'
    | | |-ImplicitCastExpr 0xcfc4e8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xcfc4b0 <col:9> 'int' lvalue Var 0xcfc450 'a' 'int'
    | | `-IntegerLiteral 0xcfc4c8 <col:13> 'int' 5
    | `-CompoundStmt 0xcfc770 <col:16, line:11:2>
    |   `-IfStmt 0xcfc750 <line:4:3, line:10:3>
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0xcfc558 <line:4:7, col:11> '_Bool' '>'
    |     | |-ImplicitCastExpr 0xcfc548 <col:7> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0xcfc510 <col:7> 'int' lvalue Var 0xcfc450 'a' 'int'
    |     | `-IntegerLiteral 0xcfc528 <col:11> 'int' 6
    |     |-ContinueStmt 0xcfc570 <line:5:4>
    |     `-WhileStmt 0xcfc738 <line:6:8, line:10:3>
    |       |-<<<NULL>>>
    |       |-BinaryOperator 0xcfc5c0 <line:6:15, col:19> '_Bool' '<'
    |       | |-ImplicitCastExpr 0xcfc5b0 <col:15> 'int' <LValueToRValue>
    |       | | `-DeclRefExpr 0xcfc578 <col:15> 'int' lvalue Var 0xcfc450 'a' 'int'
    |       | `-IntegerLiteral 0xcfc590 <col:19> 'int' 6
    |       `-CompoundStmt 0xcfc720 <col:22, line:10:3>
    |         |-IfStmt 0xcfc688 <line:7:4, line:8:9>
    |         | |-<<<NULL>>>
    |         | |-BinaryOperator 0xcfc620 <line:7:8, col:12> '_Bool' '>'
    |         | | |-ImplicitCastExpr 0xcfc610 <col:8> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0xcfc5d8 <col:8> 'int' lvalue Var 0xcfc450 'a' 'int'
    |         | | `-IntegerLiteral 0xcfc5f0 <col:12> 'int' 6
    |         | |-BinaryOperator 0xcfc670 <line:8:5, col:9> 'int' lvalue '='
    |         | | |-DeclRefExpr 0xcfc638 <col:5> 'int' lvalue Var 0xcfc450 'a' 'int'
    |         | | `-IntegerLiteral 0xcfc650 <col:9> 'int' 6
    |         | `-<<<NULL>>>
    |         `-DeclStmt 0xcfc710 <line:9:4, col:13>
    |           `-VarDecl 0xcfc6c0 <col:4, col:12> col:8 c 'int' cinit
    |             `-IntegerLiteral 0xcfc6f0 <col:12> 'int' 5
    `-DeclStmt 0xcfc800 <line:12:2, col:12>
      `-VarDecl 0xcfc7b0 <col:2, col:10> col:6 b 'int' cinit
        `-IntegerLiteral 0xcfc7e0 <col:10> 'int' 17
