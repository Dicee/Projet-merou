TranslationUnitDecl 0xbdd340 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0xbdd630 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
|-FunctionDecl 0xbdd6f0 <ModelChecker\unitary_tests\Model_checker\main.cpp:1:1, line:3:1> line:1:5 used f 'int (int)'
| |-ParmVarDecl 0xbdd670 <col:7, col:11> col:11 used q 'int'
| `-CompoundStmt 0xbdd7d8 <col:14, line:3:1>
|   `-ReturnStmt 0xbdd7c8 <line:2:5, col:14>
|     `-BinaryOperator 0xbdd7b0 <col:12, col:14> 'int' '+'
|       |-ImplicitCastExpr 0xbdd7a0 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0xbdd764 <col:12> 'int' lvalue ParmVar 0xbdd670 'q' 'int'
|       `-IntegerLiteral 0xbdd780 <col:14> 'int' 2
`-FunctionDecl 0xbdd8e0 <line:5:1, line:22:1> line:5:5 main 'int (int, char **)'
  |-ParmVarDecl 0xbdd800 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0xbdd860 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0xbdded8 <col:33, line:22:1>
    |-DeclStmt 0xbdda90 <line:6:5, col:21>
    | `-VarDecl 0xbdd970 <col:5, col:20> col:9 used j 'int' cinit
    |   `-BinaryOperator 0xbdda78 <col:13, col:20> 'int' '+'
    |     |-IntegerLiteral 0xbdd9a0 <col:13> 'int' 5
    |     `-CallExpr 0xbdda58 <col:17, col:20> 'int'
    |       |-ImplicitCastExpr 0xbdda48 <col:17> 'int (*)(int)' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0xbdda18 <col:17> 'int (int)' lvalue Function 0xbdd6f0 'f' 'int (int)'
    |       `-IntegerLiteral 0xbdd9f8 <col:19> 'int' 7
    |-IfStmt 0xbddb60 <line:7:5, col:20>
    | |-<<<NULL>>>
    | |-BinaryOperator 0xbddb38 <col:9, col:18> '_Bool' '=='
    | | |-ImplicitCastExpr 0xbddb28 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0xbddaa0 <col:9> 'int' lvalue Var 0xbdd970 'j' 'int'
    | | `-ParenExpr 0xbddb10 <col:14, col:18> 'int'
    | |   `-BinaryOperator 0xbddaf8 <col:15, col:17> 'int' '-'
    | |     |-IntegerLiteral 0xbddab8 <col:15> 'int' 4
    | |     `-IntegerLiteral 0xbddad8 <col:17> 'int' 6
    | |-NullStmt 0xbddb50 <col:20>
    | `-<<<NULL>>>
    |-CallExpr 0xbddc00 <line:8:5, col:8> 'int'
    | |-ImplicitCastExpr 0xbddbf0 <col:5> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xbddbd8 <col:5> 'int (int)' lvalue Function 0xbdd6f0 'f' 'int (int)'
    | `-IntegerLiteral 0xbddbb8 <col:7> 'int' 6
    |-DeclStmt 0xbddc60 <line:9:5, col:10>
    | `-VarDecl 0xbddc30 <col:5, col:9> col:9 used q 'int'
    |-DeclStmt 0xbddcd0 <line:11:5, col:14>
    | `-VarDecl 0xbddc80 <col:5, col:13> col:9 d 'int' cinit
    |   `-IntegerLiteral 0xbddcb0 <col:13> 'int' 0
    |-CallExpr 0xbddd58 <line:14:5, col:8> 'int'
    | |-ImplicitCastExpr 0xbddd48 <col:5> 'int (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0xbddd30 <col:5> 'int (int)' lvalue Function 0xbdd6f0 'f' 'int (int)'
    | `-ImplicitCastExpr 0xbddd78 <col:7> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0xbddd18 <col:7> 'int' lvalue Var 0xbddc30 'q' 'int'
    `-IfStmt 0xbddeb8 <line:16:5, line:21:5>
      |-<<<NULL>>>
      |-BinaryOperator 0xbdddd0 <line:16:9, col:14> '_Bool' '=='
      | |-ImplicitCastExpr 0xbdddc0 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0xbddd84 <col:9> 'int' lvalue Var 0xbdd970 'j' 'int'
      | `-IntegerLiteral 0xbddda0 <col:14> 'int' 2
      |-CompoundStmt 0xbdde38 <col:16, line:18:5>
      | `-BinaryOperator 0xbdde20 <line:17:6, col:10> 'int' lvalue '='
      |   |-DeclRefExpr 0xbddde8 <col:6> 'int' lvalue Var 0xbddc30 'q' 'int'
      |   `-IntegerLiteral 0xbdde00 <col:10> 'int' 7
      `-CompoundStmt 0xbddea0 <line:19:10, line:21:5>
        `-BinaryOperator 0xbdde88 <line:20:6, col:10> 'int' lvalue '='
          |-DeclRefExpr 0xbdde4c <col:6> 'int' lvalue Var 0xbdd970 'j' 'int'
          `-IntegerLiteral 0xbdde68 <col:10> 'int' 3
