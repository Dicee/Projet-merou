digraph {
"int (int) f(int i)  at (6,1:1) 0x83f480" -> "int i  at (6,7:11) 0x83f400"
"int i  at (6,7:11) 0x83f400" -> "if (i >= 0) at (2,2:19) 0x83f5a0"
"if (i >= 0) at (2,2:19) 0x83f5a0" -> "ReturnStmt(IntegerLiteral,0)  at (3,2:9) 0x83f5e0"
"if (i >= 0) at (2,2:19) 0x83f5a0" -> "ReturnStmt(IntegerLiteral,1)  at (5,2:9) 0x83f610"
"ReturnStmt(IntegerLiteral,0)  at (3,2:9) 0x83f5e0"
"ReturnStmt(IntegerLiteral,1)  at (5,2:9) 0x83f610"
"int (int, char **) main(int argc, char ** argv)  at (8:31,1:1) 0x83f740" -> "int argc  at (31,10:14) 0x83f660"
"int argc  at (31,10:14) 0x83f660" -> "char ** argv  at (31,20:27) 0x83f6c0"
"char ** argv  at (31,20:27) 0x83f6c0" -> "int * p   at (9,2:7) 0x83f7f0"
"int * p   at (9,2:7) 0x83f7f0" -> "int * q   at (9,2:11) 0x83f840"
"int * q   at (9,2:11) 0x83f840" -> "(p = (p + 1))  at (10,2:10) 0x83f908"
"(p = (p + 1))  at (10,2:10) 0x83f908" -> "int * p   at (13,3:8) 0x83f940"
"int * p   at (13,3:8) 0x83f940" -> "int i  = 0  at (16,6:13) 0x83fa00"
"int i  = 0  at (16,6:13) 0x83fa00" -> "for (i < 2) at (16:18,2:2) 0x83fb28"
"for (i < 2) at (16:18,2:2) 0x83fb28" -> "const char * s   at (20,2:14) 0x83fb80"
"for (i < 2) at (16:18,2:2) 0x83fb28" -> "float p  = 1.200000e+00  at (17,3:13) 0x83fab0"
"const char * s   at (20,2:14) 0x83fb80" -> "(s = (0 ? "sofia" : "sofiati"))  at (21,2:20) 0x83fd50"
"(s = (0 ? "sofia" : "sofiati"))  at (21,2:20) 0x83fd50" -> "float f  = 3  at (23,2:12) 0x83fd80"
"float f  = 3  at (23,2:12) 0x83fd80" -> "(f += 5)  at (25,2:7) 0x83fe38"
"(f += 5)  at (25,2:7) 0x83fe38" -> "double [4] arr  = { 3,2,1,4 }  at (27,2:26) 0x83fea0"
"double [4] arr  = { 3,2,1,4 }  at (27,2:26) 0x83fea0" -> "double a  = arr[0]  at (28,2:18) 0x8813c0"
"double a  = arr[0]  at (28,2:18) 0x8813c0" -> "float * z   at (29,2:9) 0x8814c0"
"float * z   at (29,2:9) 0x8814c0" -> "ReturnStmt(IntegerLiteral,0)  at (30,2:9) 0x881520"
"ReturnStmt(IntegerLiteral,0)  at (30,2:9) 0x881520"
"float p  = 1.200000e+00  at (17,3:13) 0x83fab0" -> "i++  at (16,21:22) 0x83fa88"
"i++  at (16,21:22) 0x83fa88" -> "for (i < 2) at (16:18,2:2) 0x83fb28"
}