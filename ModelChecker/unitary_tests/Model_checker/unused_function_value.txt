TranslationUnitDecl 0x33bbe70 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x33bc160 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
|-FunctionDecl 0x33bc260 <ModelChecker\unitary_tests\Model_checker\unused_function_value.cpp:1:1, line:3:1> line:1:5 used f 'int (int, int)'
| |-ParmVarDecl 0x33bc1a0 <col:7, col:11> col:11 a 'int'
| |-ParmVarDecl 0x33bc1e0 <col:14, col:18> col:18 b 'int'
| `-CompoundStmt 0x33bc308 <col:20, line:3:1>
|   `-ReturnStmt 0x33bc2f8 <line:2:2, col:9>
|     `-IntegerLiteral 0x33bc2d8 <col:9> 'int' 1
|-FunctionDecl 0x33bc350 <line:5:1, col:12> col:6 used g 'void (void)'
| `-CompoundStmt 0x33bc3c0 <col:10, col:12>
|-FunctionDecl 0x33bc450 <line:7:1, line:9:1> line:7:6 h 'void (int)'
| |-ParmVarDecl 0x33bc3e0 <col:8, col:12> col:12 used a 'int'
| `-CompoundStmt 0x33bc518 <col:15, line:9:1>
|   `-BinaryOperator 0x33bc500 <line:8:2, col:6> 'int' lvalue '='
|     |-DeclRefExpr 0x33bc4c4 <col:2> 'int' lvalue ParmVar 0x33bc3e0 'a' 'int'
|     `-IntegerLiteral 0x33bc4e0 <col:6> 'int' 0
|-FunctionDecl 0x33bc570 <line:11:1, line:13:1> line:11:7 used fun 'float (void)'
| `-CompoundStmt 0x33bc610 <col:13, line:13:1>
|   `-ReturnStmt 0x33bc600 <line:12:2, col:9>
|     `-FloatingLiteral 0x33bc5e0 <col:9> 'float' 1.000000e+00
`-FunctionDecl 0x33bc720 <line:15:1, line:26:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x33bc640 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x33bc6a0 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x3403668 <col:33, line:26:1>
    |-CallExpr 0x33bc818 <line:16:2, col:4> 'void'
    | `-ImplicitCastExpr 0x33bc808 <col:2> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x33bc7d0 <col:2> 'void (void)' lvalue Function 0x33bc350 'g' 'void (void)'
    |-DeclStmt 0x33bc998 <line:17:2, col:20>
    | `-VarDecl 0x33bc850 <col:2, col:19> col:6 used i 'int' cinit
    |   `-BinaryOperator 0x33bc980 <col:10, col:19> 'int' '+'
    |     |-CallExpr 0x33bc938 <col:10, col:15> 'int'
    |     | |-ImplicitCastExpr 0x33bc928 <col:10> 'int (*)(int, int)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x33bc8f8 <col:10> 'int (int, int)' lvalue Function 0x33bc260 'f' 'int (int, int)'
    |     | |-IntegerLiteral 0x33bc8b8 <col:12> 'int' 5
    |     | `-IntegerLiteral 0x33bc8d8 <col:14> 'int' 6
    |     `-IntegerLiteral 0x33bc960 <col:19> 'int' 3
    |-CallExpr 0x33bca48 <line:18:2, col:7> 'int'
    | |-ImplicitCastExpr 0x33bca38 <col:2> 'int (*)(int, int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x33bca20 <col:2> 'int (int, int)' lvalue Function 0x33bc260 'f' 'int (int, int)'
    | |-IntegerLiteral 0x33bc9e0 <col:4> 'int' 3
    | `-IntegerLiteral 0x33bca00 <col:6> 'int' 4
    |-IfStmt 0x33bcbe8 <line:19:2, line:20:17>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x33bcb08 <line:19:6, col:10> '_Bool' <FloatingToBoolean>
    | | `-CallExpr 0x33bcae8 <col:6, col:10> 'float'
    | |   `-ImplicitCastExpr 0x33bcad8 <col:6> 'float (*)(void)' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x33bcaa8 <col:6> 'float (void)' lvalue Function 0x33bc570 'fun' 'float (void)'
    | |-BinaryOperator 0x33bcb50 <col:13, col:17> 'int' lvalue '='
    | | |-DeclRefExpr 0x33bcb14 <col:13> 'int' lvalue Var 0x33bc850 'i' 'int'
    | | `-IntegerLiteral 0x33bcb30 <col:17> 'int' 0
    | `-CallExpr 0x33bcbc8 <line:20:13, col:17> 'float'
    |   `-ImplicitCastExpr 0x33bcbb8 <col:13> 'float (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x33bcba0 <col:13> 'float (void)' lvalue Function 0x33bc570 'fun' 'float (void)'
    |-WhileStmt 0x3403620 <line:21:2, line:24:2>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x34031e0 <line:21:9, col:18> '_Bool' <IntegralToBoolean>
    | | `-CallExpr 0x34031a8 <col:9, col:18> 'int'
    | |   |-ImplicitCastExpr 0x33bccf8 <col:9> 'int (*)(int, int)' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x33bccdc <col:9> 'int (int, int)' lvalue Function 0x33bc260 'f' 'int (int, int)'
    | |   |-IntegerLiteral 0x33bcc40 <col:11> 'int' 5
    | |   `-ImplicitCastExpr 0x34031d0 <col:13, col:17> 'int' <FloatingToIntegral>
    | |     `-CallExpr 0x33bccc0 <col:13, col:17> 'float'
    | |       `-ImplicitCastExpr 0x33bccb0 <col:13> 'float (*)(void)' <FunctionToPointerDecay>
    | |         `-DeclRefExpr 0x33bcc98 <col:13> 'float (void)' lvalue Function 0x33bc570 'fun' 'float (void)'
    | `-CompoundStmt 0x3403608 <col:21, line:24:2>
    |   |-BinaryOperator 0x34032d8 <line:22:3, col:12> 'int' '+'
    |   | |-CallExpr 0x3403290 <col:3, col:8> 'int'
    |   | | |-ImplicitCastExpr 0x3403280 <col:3> 'int (*)(int, int)' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x3403268 <col:3> 'int (int, int)' lvalue Function 0x33bc260 'f' 'int (int, int)'
    |   | | |-IntegerLiteral 0x3403228 <col:5> 'int' 1
    |   | | `-IntegerLiteral 0x3403248 <col:7> 'int' 6
    |   | `-IntegerLiteral 0x34032b8 <col:12> 'int' 1
    |   `-IfStmt 0x34035e8 <line:23:3, col:37>
    |     |-<<<NULL>>>
    |     |-ImplicitCastExpr 0x3403460 <col:7, col:20> '_Bool' <FloatingToBoolean>
    |     | `-BinaryOperator 0x3403448 <col:7, col:20> 'float' '+'
    |     |   |-ImplicitCastExpr 0x3403438 <col:7, col:12> 'float' <IntegralToFloating>
    |     |   | `-CallExpr 0x3403390 <col:7, col:12> 'int'
    |     |   |   |-ImplicitCastExpr 0x3403380 <col:7> 'int (*)(int, int)' <FunctionToPointerDecay>
    |     |   |   | `-DeclRefExpr 0x3403368 <col:7> 'int (int, int)' lvalue Function 0x33bc260 'f' 'int (int, int)'
    |     |   |   |-IntegerLiteral 0x3403328 <col:9> 'int' 4
    |     |   |   `-IntegerLiteral 0x3403348 <col:11> 'int' 2
    |     |   `-CallExpr 0x3403418 <col:16, col:20> 'float'
    |     |     `-ImplicitCastExpr 0x3403408 <col:16> 'float (*)(void)' <FunctionToPointerDecay>
    |     |       `-DeclRefExpr 0x34033f0 <col:16> 'float (void)' lvalue Function 0x33bc570 'fun' 'float (void)'
    |     |-BinaryOperator 0x34035d0 <col:23, col:37> 'float' '*'
    |     | |-ImplicitCastExpr 0x34035c0 <col:23> 'float' <IntegralToFloating>
    |     | | `-IntegerLiteral 0x3403470 <col:23> 'int' 5
    |     | `-ParenExpr 0x34035a8 <col:25, col:37> 'float'
    |     |   `-BinaryOperator 0x3403590 <col:26, col:36> 'float' '-'
    |     |     |-ImplicitCastExpr 0x3403580 <col:26> 'float' <IntegralToFloating>
    |     |     | `-ImplicitCastExpr 0x3403570 <col:26> 'int' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x3403490 <col:26> 'int' lvalue Var 0x33bc850 'i' 'int'
    |     |     `-BinaryOperator 0x3403558 <col:30, col:36> 'float' '*'
    |     |       |-ImplicitCastExpr 0x3403548 <col:30> 'float' <IntegralToFloating>
    |     |       | `-IntegerLiteral 0x34034a8 <col:30> 'int' 9
    |     |       `-CallExpr 0x3403528 <col:32, col:36> 'float'
    |     |         `-ImplicitCastExpr 0x3403518 <col:32> 'float (*)(void)' <FunctionToPointerDecay>
    |     |           `-DeclRefExpr 0x3403500 <col:32> 'float (void)' lvalue Function 0x33bc570 'fun' 'float (void)'
    |     `-<<<NULL>>>
    `-ReturnStmt 0x3403658 <line:25:2, col:9>
      `-IntegerLiteral 0x3403638 <col:9> 'int' 0
