TranslationUnitDecl 0x26f71b0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x26f76f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
|-TypedefDecl 0x26f7750 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
|-TypedefDecl 0x26f7b10 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
|-FunctionDecl 0x26f7cb0 <ModelChecker/unitary_tests/Model_checker/unused_function_value.cpp:1:1, line:3:1> line:1:5 used f 'int (int, int)'
| |-ParmVarDecl 0x26f7b70 <col:7, col:11> col:11 a 'int'
| |-ParmVarDecl 0x26f7be0 <col:14, col:18> col:18 b 'int'
| `-CompoundStmt 0x26f7da0 <col:20, line:3:1>
|   `-ReturnStmt 0x26f7d80 <line:2:2, col:9>
|     `-IntegerLiteral 0x26f7d60 <col:9> 'int' 1
|-FunctionDecl 0x26f7e10 <line:5:1, col:12> col:6 used g 'void (void)'
| `-CompoundStmt 0x26f7eb0 <col:10, col:12>
|-FunctionDecl 0x2735db0 <line:7:1, line:9:1> line:7:6 h 'void (int)'
| |-ParmVarDecl 0x2735cf0 <col:8, col:12> col:12 used a 'int'
| `-CompoundStmt 0x2735ec8 <col:15, line:9:1>
|   `-BinaryOperator 0x2735ea0 <line:8:2, col:6> 'int' lvalue '='
|     |-DeclRefExpr 0x2735e58 <col:2> 'int' lvalue ParmVar 0x2735cf0 'a' 'int'
|     `-IntegerLiteral 0x2735e80 <col:6> 'int' 0
|-FunctionDecl 0x2735f40 <line:11:1, line:13:1> line:11:7 used fun 'float (void)'
| `-CompoundStmt 0x2736020 <col:13, line:13:1>
|   `-ReturnStmt 0x2736000 <line:12:2, col:9>
|     `-FloatingLiteral 0x2735fe0 <col:9> 'float' 1.000000e+00
`-FunctionDecl 0x27361f0 <line:15:1, line:26:1> line:15:5 main 'int (int, char **)'
  |-ParmVarDecl 0x2736050 <col:10, col:14> col:14 argc 'int'
  |-ParmVarDecl 0x2736120 <col:20, col:27> col:27 argv 'char **'
  `-CompoundStmt 0x2737330 <col:33, line:26:1>
    |-CallExpr 0x2736360 <line:16:2, col:4> 'void'
    | `-ImplicitCastExpr 0x2736348 <col:2> 'void (*)(void)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x27362f8 <col:2> 'void (void)' lvalue Function 0x26f7e10 'g' 'void (void)'
    |-DeclStmt 0x2736580 <line:17:2, col:20>
    | `-VarDecl 0x27363a0 <col:2, col:19> col:6 used i 'int' cinit
    |   `-BinaryOperator 0x2736558 <col:10, col:19> 'int' '+'
    |     |-CallExpr 0x2736500 <col:10, col:15> 'int'
    |     | |-ImplicitCastExpr 0x27364e8 <col:10> 'int (*)(int, int)' <FunctionToPointerDecay>
    |     | | `-DeclRefExpr 0x2736490 <col:10> 'int (int, int)' lvalue Function 0x26f7cb0 'f' 'int (int, int)'
    |     | |-IntegerLiteral 0x2736450 <col:12> 'int' 5
    |     | `-IntegerLiteral 0x2736470 <col:14> 'int' 6
    |     `-IntegerLiteral 0x2736538 <col:19> 'int' 3
    |-CallExpr 0x2736670 <line:18:2, col:7> 'int'
    | |-ImplicitCastExpr 0x2736658 <col:2> 'int (*)(int, int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x2736630 <col:2> 'int (int, int)' lvalue Function 0x26f7cb0 'f' 'int (int, int)'
    | |-IntegerLiteral 0x27365f0 <col:4> 'int' 3
    | `-IntegerLiteral 0x2736610 <col:6> 'int' 4
    |-IfStmt 0x27368e0 <line:19:2, line:20:17>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x2736798 <line:19:6, col:10> '_Bool' <FloatingToBoolean>
    | | `-CallExpr 0x2736770 <col:6, col:10> 'float'
    | |   `-ImplicitCastExpr 0x2736758 <col:6> 'float (*)(void)' <FunctionToPointerDecay>
    | |     `-DeclRefExpr 0x2736700 <col:6> 'float (void)' lvalue Function 0x2735f40 'fun' 'float (void)'
    | |-BinaryOperator 0x27367f8 <col:13, col:17> 'int' lvalue '='
    | | |-DeclRefExpr 0x27367b0 <col:13> 'int' lvalue Var 0x27363a0 'i' 'int'
    | | `-IntegerLiteral 0x27367d8 <col:17> 'int' 0
    | `-CallExpr 0x27368b8 <line:20:13, col:17> 'float'
    |   `-ImplicitCastExpr 0x27368a0 <col:13> 'float (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x2736878 <col:13> 'float (void)' lvalue Function 0x2735f40 'fun' 'float (void)'
    |-WhileStmt 0x27372c8 <line:21:2, line:24:2>
    | |-<<<NULL>>>
    | |-ImplicitCastExpr 0x2736ad8 <line:21:9, col:18> '_Bool' <IntegralToBoolean>
    | | `-CallExpr 0x2736a88 <col:9, col:18> 'int'
    | |   |-ImplicitCastExpr 0x2736a70 <col:9> 'int (*)(int, int)' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x2736a48 <col:9> 'int (int, int)' lvalue Function 0x26f7cb0 'f' 'int (int, int)'
    | |   |-IntegerLiteral 0x2736968 <col:11> 'int' 5
    | |   `-ImplicitCastExpr 0x2736ac0 <col:13, col:17> 'int' <FloatingToIntegral>
    | |     `-CallExpr 0x2736a20 <col:13, col:17> 'float'
    | |       `-ImplicitCastExpr 0x2736a08 <col:13> 'float (*)(void)' <FunctionToPointerDecay>
    | |         `-DeclRefExpr 0x27369e0 <col:13> 'float (void)' lvalue Function 0x2735f40 'fun' 'float (void)'
    | `-CompoundStmt 0x27372a0 <col:21, line:24:2>
    |   |-BinaryOperator 0x2736c20 <line:22:3, col:12> 'int' '+'
    |   | |-CallExpr 0x2736bc8 <col:3, col:8> 'int'
    |   | | |-ImplicitCastExpr 0x2736bb0 <col:3> 'int (*)(int, int)' <FunctionToPointerDecay>
    |   | | | `-DeclRefExpr 0x2736b88 <col:3> 'int (int, int)' lvalue Function 0x26f7cb0 'f' 'int (int, int)'
    |   | | |-IntegerLiteral 0x2736b48 <col:5> 'int' 1
    |   | | `-IntegerLiteral 0x2736b68 <col:7> 'int' 6
    |   | `-IntegerLiteral 0x2736c00 <col:12> 'int' 1
    |   `-IfStmt 0x2737270 <line:23:3, col:37>
    |     |-<<<NULL>>>
    |     |-ImplicitCastExpr 0x2737038 <col:7, col:20> '_Bool' <FloatingToBoolean>
    |     | `-BinaryOperator 0x2737010 <col:7, col:20> 'float' '+'
    |     |   |-ImplicitCastExpr 0x2736ff8 <col:7, col:12> 'float' <IntegralToFloating>
    |     |   | `-CallExpr 0x2736f00 <col:7, col:12> 'int'
    |     |   |   |-ImplicitCastExpr 0x2736ee8 <col:7> 'int (*)(int, int)' <FunctionToPointerDecay>
    |     |   |   | `-DeclRefExpr 0x2736ec0 <col:7> 'int (int, int)' lvalue Function 0x26f7cb0 'f' 'int (int, int)'
    |     |   |   |-IntegerLiteral 0x2736ca0 <col:9> 'int' 4
    |     |   |   `-IntegerLiteral 0x2736cc0 <col:11> 'int' 2
    |     |   `-CallExpr 0x2736fd0 <col:16, col:20> 'float'
    |     |     `-ImplicitCastExpr 0x2736fb8 <col:16> 'float (*)(void)' <FunctionToPointerDecay>
    |     |       `-DeclRefExpr 0x2736f90 <col:16> 'float (void)' lvalue Function 0x2735f40 'fun' 'float (void)'
    |     |-BinaryOperator 0x2737248 <col:23, col:37> 'float' '*'
    |     | |-ImplicitCastExpr 0x2737230 <col:23> 'float' <IntegralToFloating>
    |     | | `-IntegerLiteral 0x2737050 <col:23> 'int' 5
    |     | `-ParenExpr 0x2737210 <col:25, col:37> 'float'
    |     |   `-BinaryOperator 0x27371e8 <col:26, col:36> 'float' '-'
    |     |     |-ImplicitCastExpr 0x27371d0 <col:26> 'float' <IntegralToFloating>
    |     |     | `-ImplicitCastExpr 0x27371b8 <col:26> 'int' <LValueToRValue>
    |     |     |   `-DeclRefExpr 0x2737070 <col:26> 'int' lvalue Var 0x27363a0 'i' 'int'
    |     |     `-BinaryOperator 0x2737190 <col:30, col:36> 'float' '*'
    |     |       |-ImplicitCastExpr 0x2737178 <col:30> 'float' <IntegralToFloating>
    |     |       | `-IntegerLiteral 0x2737098 <col:30> 'int' 9
    |     |       `-CallExpr 0x2737150 <col:32, col:36> 'float'
    |     |         `-ImplicitCastExpr 0x2737138 <col:32> 'float (*)(void)' <FunctionToPointerDecay>
    |     |           `-DeclRefExpr 0x2737110 <col:32> 'float (void)' lvalue Function 0x2735f40 'fun' 'float (void)'
    |     `-<<<NULL>>>
    `-ReturnStmt 0x2737310 <line:25:2, col:9>
      `-IntegerLiteral 0x27372f0 <col:9> 'int' 0
