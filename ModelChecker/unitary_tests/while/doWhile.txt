TranslationUnitDecl 0x109c0a0 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x109c390 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
`-FunctionDecl 0x109c400 <unitary_tests\while\doWhile.cpp:1:1, line:11:1> line:1:5 main 'int (void)'
  `-CompoundStmt 0x109c740 <col:12, line:11:1>
    |-DeclStmt 0x109c4f0 <line:2:2, col:11>
    | `-VarDecl 0x109c4a0 <col:2, col:10> col:6 used a 'int' cinit
    |   `-IntegerLiteral 0x109c4d0 <col:10> 'int' 5
    |-DoStmt 0x109c6b0 <line:3:2, line:9:16>
    | |-CompoundStmt 0x109c638 <line:3:5, line:9:2>
    | | `-IfStmt 0x109c618 <line:4:3, line:8:3>
    | |   |-<<<NULL>>>
    | |   |-BinaryOperator 0x109c548 <line:4:7, col:11> '_Bool' '>'
    | |   | |-ImplicitCastExpr 0x109c538 <col:7> 'int' <LValueToRValue>
    | |   | | `-DeclRefExpr 0x109c500 <col:7> 'int' lvalue Var 0x109c4a0 'a' 'int'
    | |   | `-IntegerLiteral 0x109c518 <col:11> 'int' 6
    | |   |-BinaryOperator 0x109c598 <line:5:4, col:8> 'int' lvalue '='
    | |   | |-DeclRefExpr 0x109c560 <col:4> 'int' lvalue Var 0x109c4a0 'a' 'int'
    | |   | `-IntegerLiteral 0x109c578 <col:8> 'int' 5
    | |   `-CompoundStmt 0x109c600 <line:6:8, line:8:3>
    | |     `-BinaryOperator 0x109c5e8 <line:7:4, col:8> 'int' lvalue '='
    | |       |-DeclRefExpr 0x109c5b0 <col:4> 'int' lvalue Var 0x109c4a0 'a' 'int'
    | |       `-IntegerLiteral 0x109c5c8 <col:8> 'int' 3
    | `-BinaryOperator 0x109c698 <line:9:11, col:15> '_Bool' '>'
    |   |-ImplicitCastExpr 0x109c688 <col:11> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x109c64c <col:11> 'int' lvalue Var 0x109c4a0 'a' 'int'
    |   `-IntegerLiteral 0x109c668 <col:15> 'int' 5
    `-DeclStmt 0x109c730 <line:10:2, col:12>
      `-VarDecl 0x109c6e0 <col:2, col:10> col:6 b 'int' cinit
        `-IntegerLiteral 0x109c710 <col:10> 'int' 17
