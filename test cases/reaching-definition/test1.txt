`-FunctionDecl 0x103ca3fa0 <test1.cpp:11:1, line:24:1> main 'int (int, char **)'
  |-ParmVarDecl 0x103ca3e60 <line:11:10, col:14> argv 'int'
  |-ParmVarDecl 0x103ca3ed0 <col:20, col:27> argc 'char **'
  `-CompoundStmt 0x103caac18 <col:33, line:24:1>
    |-DeclStmt 0x103ca40d8 <line:12:2, col:11>
    | `-VarDecl 0x103ca4060 <col:2, col:10> x 'int'
    |   `-IntegerLiteral 0x103ca40b8 <col:10> 'int' 5
    |-DeclStmt 0x103ca4178 <line:13:2, col:12>
    | `-VarDecl 0x103ca4100 <col:2, col:10> y 'int'
    |   `-IntegerLiteral 0x103ca4158 <col:10> 'int' 17
    |-DeclStmt 0x103ca4218 <line:14:2, col:12>
    | `-VarDecl 0x103ca41a0 <col:2, col:10> z 'int'
    |   `-IntegerLiteral 0x103ca41f8 <col:10> 'int' 15
    |-IfStmt 0x103ca44a0 <line:16:2, line:21:2>
    | |-<<<NULL>>>
    | |-BinaryOperator 0x103ca42b0 <line:16:6, col:10> '_Bool' '>'
    | | |-ImplicitCastExpr 0x103ca4280 <col:6> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x103ca4230 <col:6> 'int' lvalue Var 0x103ca4060 'x' 'int'
    | | `-ImplicitCastExpr 0x103ca4298 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x103ca4258 <col:10> 'int' lvalue Var 0x103ca4100 'y' 'int'
    | |-CompoundStmt 0x103ca43e8 <col:13, line:19:2>
    | | |-CompoundAssignOperator 0x103ca4320 <line:17:3, col:8> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    | | | |-DeclRefExpr 0x103ca42d8 <col:3> 'int' lvalue Var 0x103ca4100 'y' 'int'
    | | | `-IntegerLiteral 0x103ca4300 <col:8> 'int' 3
    | | `-BinaryOperator 0x103ca43c0 <line:18:3, col:8> 'int' lvalue '='
    | |   |-DeclRefExpr 0x103ca4358 <col:3> 'int' lvalue Var 0x103ca4060 'x' 'int'
    | |   `-ImplicitCastExpr 0x103ca43a8 <col:8> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x103ca4380 <col:8> 'int' lvalue Var 0x103ca4100 'y' 'int'
    | `-CompoundStmt 0x103ca4480 <line:19:9, line:21:2>
    |   `-BinaryOperator 0x103ca4458 <line:20:3, col:8> 'int' lvalue '='
    |     |-DeclRefExpr 0x103ca4410 <col:3> 'int' lvalue Var 0x103ca4060 'x' 'int'
    |     `-IntegerLiteral 0x103ca4438 <col:8> 'int' 6
    |-CXXOperatorCallExpr 0x103caab90 <line:22:2, col:27> 'class std::__1::basic_ostream<char>' lvalue
    | |-ImplicitCastExpr 0x103caab78 <col:19> 'class std::__1::basic_ostream<char> &(*)(class std::__1::basic_ostream<char> &(*)(class std::__1::basic_ostream<char> &))' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x103caaaf8 <col:19> 'class std::__1::basic_ostream<char> &(class std::__1::basic_ostream<char> &(*)(class std::__1::basic_ostream<char> &))' lvalue CXXMethod 0x103c35790 'operator<<' 'class std::__1::basic_ostream<char> &(class std::__1::basic_ostream<char> &(*)(class std::__1::basic_ostream<char> &))'
    | |-CXXOperatorCallExpr 0x103ca8480 <col:2, col:15> 'basic_ostream<char, struct std::__1::char_traits<char> >':'class std::__1::basic_ostream<char>' lvalue
    | | |-ImplicitCastExpr 0x103ca8468 <col:12> 'basic_ostream<char, struct std::__1::char_traits<char> > &(*)(basic_ostream<char, struct std::__1::char_traits<char> > &, const char *)' <FunctionToPointerDecay>
    | | | `-DeclRefExpr 0x103ca83e0 <col:12> 'basic_ostream<char, struct std::__1::char_traits<char> > &(basic_ostream<char, struct std::__1::char_traits<char> > &, const char *)' lvalue Function 0x103ca4f70 'operator<<' 'basic_ostream<char, struct std::__1::char_traits<char> > &(basic_ostream<char, struct std::__1::char_traits<char> > &, const char *)'
    | | |-DeclRefExpr 0x103ca4508 <col:2, col:7> 'ostream':'class std::__1::basic_ostream<char>' lvalue Var 0x103ca3830 'cout' 'ostream':'class std::__1::basic_ostream<char>'
    | | `-ImplicitCastExpr 0x103ca83c8 <col:15> 'const char *' <ArrayToPointerDecay>
    | |   `-StringLiteral 0x103ca4540 <col:15> 'const char [2]' lvalue "2"
    | `-ImplicitCastExpr 0x103caaae0 <col:22, col:27> 'basic_ostream<char, struct std::__1::char_traits<char> > &(*)(basic_ostream<char, struct std::__1::char_traits<char> > &)' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x103caaaa0 <col:22, col:27> 'basic_ostream<char, struct std::__1::char_traits<char> > &(basic_ostream<char, struct std::__1::char_traits<char> > &)' lvalue Function 0x103ca8940 'endl' 'basic_ostream<char, struct std::__1::char_traits<char> > &(basic_ostream<char, struct std::__1::char_traits<char> > &)' (FunctionTemplate 0x103c2ff70 'endl')
    `-ReturnStmt 0x103caabf8 <line:23:2, col:9>
      `-IntegerLiteral 0x103caabd8 <col:9> 'int' 0